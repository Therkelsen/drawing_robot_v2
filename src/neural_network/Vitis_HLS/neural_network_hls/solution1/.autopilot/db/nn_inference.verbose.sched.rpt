

================================================================
== Vitis HLS Report for 'nn_inference'
================================================================
* Date:           Tue Nov 26 10:05:26 2024

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        neural_network_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.195 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1198|     1198|  11.980 us|  11.980 us|  1199|  1199|     none|
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       32|       32|         1|          1|          1|    32|       yes|
        |- Loop 2  |       16|       16|         1|          1|          1|    16|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 1
  * Pipeline-1: initiation interval (II) = 1, depth = 1


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 48
* Pipeline : 2
  Pipeline-0 : II = 1, D = 1, States = { 2 }
  Pipeline-1 : II = 1, D = 1, States = { 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 2 
3 --> 4 
4 --> 5 4 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 45 
45 --> 46 
46 --> 47 
47 --> 48 
48 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.48>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_5"   --->   Operation 49 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_img, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_2, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 50 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%empty = specmemcore i32 @_ssdm_op_SpecMemCore, i32 %input_img, i32 666, i32 17, i32 1"   --->   Operation 51 'specmemcore' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %input_img, void @empty_3, i32 0, i32 0, void @empty_0, i32 4294967295, i32 0, void @empty_0, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 52 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %input_img"   --->   Operation 53 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 54 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i32 %out_r"   --->   Operation 54 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 55 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 %out_r, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_4, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 55 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 56 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i32 0, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_0, void @empty_0, i32 0, i32 0, i32 0, i32 0, void @empty_0, void @empty_0"   --->   Operation 56 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 57 [1/1] (0.00ns)   --->   "%temp_output_0 = alloca i64 1" [matmul.cpp:114]   --->   Operation 57 'alloca' 'temp_output_0' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 58 [1/1] (0.00ns)   --->   "%temp_output2_0 = alloca i64 1" [matmul.cpp:115]   --->   Operation 58 'alloca' 'temp_output2_0' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 59 [1/1] (0.48ns)   --->   "%br_ln114 = br void %memset.loop14" [matmul.cpp:114]   --->   Operation 59 'br' 'br_ln114' <Predicate = true> <Delay = 0.48>

State 2 <SV = 1> <Delay = 2.22>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%empty_11 = phi i6 0, void, i6 %empty_12, void %memset.loop14.split"   --->   Operation 60 'phi' 'empty_11' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.88ns)   --->   "%empty_12 = add i6 %empty_11, i6 1"   --->   Operation 61 'add' 'empty_12' <Predicate = true> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 62 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.87ns)   --->   "%exitcond163 = icmp_eq  i6 %empty_11, i6 32"   --->   Operation 63 'icmp' 'exitcond163' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%empty_13 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 32, i64 32, i64 32"   --->   Operation 64 'speclooptripcount' 'empty_13' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 65 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond163, void %memset.loop14.split, void %split13"   --->   Operation 65 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 66 [1/1] (0.00ns)   --->   "%p_cast = zext i6 %empty_11"   --->   Operation 66 'zext' 'p_cast' <Predicate = (!exitcond163)> <Delay = 0.00>
ST_2 : Operation 67 [1/1] (0.00ns)   --->   "%temp_output_0_addr_1 = getelementptr i32 %temp_output_0, i64 0, i64 %p_cast"   --->   Operation 67 'getelementptr' 'temp_output_0_addr_1' <Predicate = (!exitcond163)> <Delay = 0.00>
ST_2 : Operation 68 [1/1] (1.35ns)   --->   "%store_ln0 = store i32 0, i5 %temp_output_0_addr_1"   --->   Operation 68 'store' 'store_ln0' <Predicate = (!exitcond163)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop14"   --->   Operation 69 'br' 'br_ln0' <Predicate = (!exitcond163)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.35>
ST_3 : Operation 70 [1/1] (0.00ns)   --->   "%temp_output_0_addr = getelementptr i32 %temp_output_0, i64 0, i64 0" [matmul.cpp:114]   --->   Operation 70 'getelementptr' 'temp_output_0_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (1.35ns)   --->   "%store_ln114 = store i32 1, i5 %temp_output_0_addr" [matmul.cpp:114]   --->   Operation 71 'store' 'store_ln114' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 72 [1/1] (0.48ns)   --->   "%br_ln115 = br void %memset.loop12" [matmul.cpp:115]   --->   Operation 72 'br' 'br_ln115' <Predicate = true> <Delay = 0.48>

State 4 <SV = 3> <Delay = 1.66>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "%empty_14 = phi i5 0, void %split13, i5 %empty_15, void %memset.loop12.split"   --->   Operation 73 'phi' 'empty_14' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 74 [1/1] (0.87ns)   --->   "%empty_15 = add i5 %empty_14, i5 1"   --->   Operation 74 'add' 'empty_15' <Predicate = true> <Delay = 0.87> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.87> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 75 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 75 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 76 [1/1] (0.87ns)   --->   "%exitcond152 = icmp_eq  i5 %empty_14, i5 16"   --->   Operation 76 'icmp' 'exitcond152' <Predicate = true> <Delay = 0.87> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 77 [1/1] (0.00ns)   --->   "%empty_16 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 77 'speclooptripcount' 'empty_16' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond152, void %memset.loop12.split, void %split11"   --->   Operation 78 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns)   --->   "%p_cast1 = zext i5 %empty_14"   --->   Operation 79 'zext' 'p_cast1' <Predicate = (!exitcond152)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_16 = getelementptr i32 %temp_output2_0, i64 0, i64 %p_cast1"   --->   Operation 80 'getelementptr' 'temp_output2_0_addr_16' <Predicate = (!exitcond152)> <Delay = 0.00>
ST_4 : Operation 81 [1/1] (0.79ns)   --->   "%store_ln0 = store i32 0, i4 %temp_output2_0_addr_16"   --->   Operation 81 'store' 'store_ln0' <Predicate = (!exitcond152)> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop12"   --->   Operation 82 'br' 'br_ln0' <Predicate = (!exitcond152)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 0.00>
ST_5 : Operation 83 [2/2] (0.00ns)   --->   "%call_ln119 = call void @l1_mm, i32 %input_img, i32 %temp_output_0" [matmul.cpp:119]   --->   Operation 83 'call' 'call_ln119' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 6 <SV = 5> <Delay = 0.00>
ST_6 : Operation 84 [1/2] (0.00ns)   --->   "%call_ln119 = call void @l1_mm, i32 %input_img, i32 %temp_output_0" [matmul.cpp:119]   --->   Operation 84 'call' 'call_ln119' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 7 <SV = 6> <Delay = 0.00>
ST_7 : Operation 85 [2/2] (0.00ns)   --->   "%call_ln120 = call void @l1_relu, i32 %temp_output_0" [matmul.cpp:120]   --->   Operation 85 'call' 'call_ln120' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 8 <SV = 7> <Delay = 0.79>
ST_8 : Operation 86 [1/1] (0.00ns)   --->   "%temp_output2_0_addr = getelementptr i32 %temp_output2_0, i64 0, i64 0" [matmul.cpp:115]   --->   Operation 86 'getelementptr' 'temp_output2_0_addr' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 87 [1/1] (0.79ns)   --->   "%store_ln115 = store i32 1, i4 %temp_output2_0_addr" [matmul.cpp:115]   --->   Operation 87 'store' 'store_ln115' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_8 : Operation 88 [1/2] (0.00ns)   --->   "%call_ln120 = call void @l1_relu, i32 %temp_output_0" [matmul.cpp:120]   --->   Operation 88 'call' 'call_ln120' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 9 <SV = 8> <Delay = 0.00>
ST_9 : Operation 89 [2/2] (0.00ns)   --->   "%call_ln121 = call void @l2_mm, i32 %temp_output_0, i32 %temp_output2_0" [matmul.cpp:121]   --->   Operation 89 'call' 'call_ln121' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 10 <SV = 9> <Delay = 0.00>
ST_10 : Operation 90 [1/2] (0.00ns)   --->   "%call_ln121 = call void @l2_mm, i32 %temp_output_0, i32 %temp_output2_0" [matmul.cpp:121]   --->   Operation 90 'call' 'call_ln121' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 11 <SV = 10> <Delay = 0.79>
ST_11 : Operation 91 [2/2] (0.79ns)   --->   "%temp_output2_0_load = load i4 %temp_output2_0_addr" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 91 'load' 'temp_output2_0_load' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_11 : Operation 92 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_1 = getelementptr i32 %temp_output2_0, i64 0, i64 1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 92 'getelementptr' 'temp_output2_0_addr_1' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 93 [2/2] (0.79ns)   --->   "%temp_output2_0_load_1 = load i4 %temp_output2_0_addr_1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 93 'load' 'temp_output2_0_load_1' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 12 <SV = 11> <Delay = 0.79>
ST_12 : Operation 94 [1/2] (0.79ns)   --->   "%temp_output2_0_load = load i4 %temp_output2_0_addr" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 94 'load' 'temp_output2_0_load' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 95 [1/2] (0.79ns)   --->   "%temp_output2_0_load_1 = load i4 %temp_output2_0_addr_1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 95 'load' 'temp_output2_0_load_1' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 96 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_2 = getelementptr i32 %temp_output2_0, i64 0, i64 2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 96 'getelementptr' 'temp_output2_0_addr_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 97 [2/2] (0.79ns)   --->   "%temp_output2_0_load_2 = load i4 %temp_output2_0_addr_2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 97 'load' 'temp_output2_0_load_2' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 98 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_3 = getelementptr i32 %temp_output2_0, i64 0, i64 3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 98 'getelementptr' 'temp_output2_0_addr_3' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 99 [2/2] (0.79ns)   --->   "%temp_output2_0_load_3 = load i4 %temp_output2_0_addr_3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 99 'load' 'temp_output2_0_load_3' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 13 <SV = 12> <Delay = 0.79>
ST_13 : Operation 100 [1/2] (0.79ns)   --->   "%temp_output2_0_load_2 = load i4 %temp_output2_0_addr_2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 100 'load' 'temp_output2_0_load_2' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_13 : Operation 101 [1/2] (0.79ns)   --->   "%temp_output2_0_load_3 = load i4 %temp_output2_0_addr_3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 101 'load' 'temp_output2_0_load_3' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_13 : Operation 102 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_4 = getelementptr i32 %temp_output2_0, i64 0, i64 4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 102 'getelementptr' 'temp_output2_0_addr_4' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 103 [2/2] (0.79ns)   --->   "%temp_output2_0_load_4 = load i4 %temp_output2_0_addr_4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 103 'load' 'temp_output2_0_load_4' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_13 : Operation 104 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_5 = getelementptr i32 %temp_output2_0, i64 0, i64 5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 104 'getelementptr' 'temp_output2_0_addr_5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 105 [2/2] (0.79ns)   --->   "%temp_output2_0_load_5 = load i4 %temp_output2_0_addr_5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 105 'load' 'temp_output2_0_load_5' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 14 <SV = 13> <Delay = 0.79>
ST_14 : Operation 106 [1/2] (0.79ns)   --->   "%temp_output2_0_load_4 = load i4 %temp_output2_0_addr_4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 106 'load' 'temp_output2_0_load_4' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_14 : Operation 107 [1/2] (0.79ns)   --->   "%temp_output2_0_load_5 = load i4 %temp_output2_0_addr_5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 107 'load' 'temp_output2_0_load_5' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_14 : Operation 108 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_6 = getelementptr i32 %temp_output2_0, i64 0, i64 6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 108 'getelementptr' 'temp_output2_0_addr_6' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 109 [2/2] (0.79ns)   --->   "%temp_output2_0_load_6 = load i4 %temp_output2_0_addr_6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 109 'load' 'temp_output2_0_load_6' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_14 : Operation 110 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_7 = getelementptr i32 %temp_output2_0, i64 0, i64 7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 110 'getelementptr' 'temp_output2_0_addr_7' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 111 [2/2] (0.79ns)   --->   "%temp_output2_0_load_7 = load i4 %temp_output2_0_addr_7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 111 'load' 'temp_output2_0_load_7' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 15 <SV = 14> <Delay = 0.79>
ST_15 : Operation 112 [1/2] (0.79ns)   --->   "%temp_output2_0_load_6 = load i4 %temp_output2_0_addr_6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 112 'load' 'temp_output2_0_load_6' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_15 : Operation 113 [1/2] (0.79ns)   --->   "%temp_output2_0_load_7 = load i4 %temp_output2_0_addr_7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 113 'load' 'temp_output2_0_load_7' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_15 : Operation 114 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_8 = getelementptr i32 %temp_output2_0, i64 0, i64 8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 114 'getelementptr' 'temp_output2_0_addr_8' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 115 [2/2] (0.79ns)   --->   "%temp_output2_0_load_8 = load i4 %temp_output2_0_addr_8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 115 'load' 'temp_output2_0_load_8' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_15 : Operation 116 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_9 = getelementptr i32 %temp_output2_0, i64 0, i64 9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 116 'getelementptr' 'temp_output2_0_addr_9' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 117 [2/2] (0.79ns)   --->   "%temp_output2_0_load_9 = load i4 %temp_output2_0_addr_9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 117 'load' 'temp_output2_0_load_9' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 16 <SV = 15> <Delay = 0.79>
ST_16 : Operation 118 [1/2] (0.79ns)   --->   "%temp_output2_0_load_8 = load i4 %temp_output2_0_addr_8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 118 'load' 'temp_output2_0_load_8' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_16 : Operation 119 [1/2] (0.79ns)   --->   "%temp_output2_0_load_9 = load i4 %temp_output2_0_addr_9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 119 'load' 'temp_output2_0_load_9' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_16 : Operation 120 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_10 = getelementptr i32 %temp_output2_0, i64 0, i64 10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 120 'getelementptr' 'temp_output2_0_addr_10' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 121 [2/2] (0.79ns)   --->   "%temp_output2_0_load_10 = load i4 %temp_output2_0_addr_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 121 'load' 'temp_output2_0_load_10' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_16 : Operation 122 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_11 = getelementptr i32 %temp_output2_0, i64 0, i64 11" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 122 'getelementptr' 'temp_output2_0_addr_11' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 123 [2/2] (0.79ns)   --->   "%temp_output2_0_load_11 = load i4 %temp_output2_0_addr_11" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 123 'load' 'temp_output2_0_load_11' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 17 <SV = 16> <Delay = 0.79>
ST_17 : Operation 124 [1/2] (0.79ns)   --->   "%temp_output2_0_load_10 = load i4 %temp_output2_0_addr_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 124 'load' 'temp_output2_0_load_10' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_17 : Operation 125 [1/2] (0.79ns)   --->   "%temp_output2_0_load_11 = load i4 %temp_output2_0_addr_11" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 125 'load' 'temp_output2_0_load_11' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_17 : Operation 126 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_12 = getelementptr i32 %temp_output2_0, i64 0, i64 12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 126 'getelementptr' 'temp_output2_0_addr_12' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 127 [2/2] (0.79ns)   --->   "%temp_output2_0_load_12 = load i4 %temp_output2_0_addr_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 127 'load' 'temp_output2_0_load_12' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_17 : Operation 128 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_13 = getelementptr i32 %temp_output2_0, i64 0, i64 13" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 128 'getelementptr' 'temp_output2_0_addr_13' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 129 [2/2] (0.79ns)   --->   "%temp_output2_0_load_13 = load i4 %temp_output2_0_addr_13" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 129 'load' 'temp_output2_0_load_13' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 18 <SV = 17> <Delay = 3.34>
ST_18 : Operation 130 [2/2] (3.34ns)   --->   "%tmp_1 = fcmp_olt  i32 %temp_output2_0_load, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 130 'fcmp' 'tmp_1' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 131 [2/2] (3.34ns)   --->   "%tmp_3 = fcmp_olt  i32 %temp_output2_0_load_1, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 131 'fcmp' 'tmp_3' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 132 [1/2] (0.79ns)   --->   "%temp_output2_0_load_12 = load i4 %temp_output2_0_addr_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 132 'load' 'temp_output2_0_load_12' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_18 : Operation 133 [1/2] (0.79ns)   --->   "%temp_output2_0_load_13 = load i4 %temp_output2_0_addr_13" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 133 'load' 'temp_output2_0_load_13' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_18 : Operation 134 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_14 = getelementptr i32 %temp_output2_0, i64 0, i64 14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 134 'getelementptr' 'temp_output2_0_addr_14' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 135 [2/2] (0.79ns)   --->   "%temp_output2_0_load_14 = load i4 %temp_output2_0_addr_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 135 'load' 'temp_output2_0_load_14' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_18 : Operation 136 [1/1] (0.00ns)   --->   "%temp_output2_0_addr_15 = getelementptr i32 %temp_output2_0, i64 0, i64 15" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 136 'getelementptr' 'temp_output2_0_addr_15' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 137 [2/2] (0.79ns)   --->   "%temp_output2_0_load_15 = load i4 %temp_output2_0_addr_15" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 137 'load' 'temp_output2_0_load_15' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 19 <SV = 18> <Delay = 4.66>
ST_19 : Operation 138 [1/1] (0.00ns)   --->   "%bitcast_ln80 = bitcast i32 %temp_output2_0_load" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 138 'bitcast' 'bitcast_ln80' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 139 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 139 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 140 [1/1] (0.00ns)   --->   "%trunc_ln80 = trunc i32 %bitcast_ln80" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 140 'trunc' 'trunc_ln80' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 141 [1/1] (0.85ns)   --->   "%icmp_ln80 = icmp_ne  i8 %tmp, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 141 'icmp' 'icmp_ln80' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 142 [1/1] (0.97ns)   --->   "%icmp_ln80_1 = icmp_eq  i23 %trunc_ln80, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 142 'icmp' 'icmp_ln80_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node select_ln80)   --->   "%or_ln80 = or i1 %icmp_ln80_1, i1 %icmp_ln80" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 143 'or' 'or_ln80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 144 [1/2] (3.34ns)   --->   "%tmp_1 = fcmp_olt  i32 %temp_output2_0_load, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 144 'fcmp' 'tmp_1' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node select_ln80)   --->   "%and_ln80 = and i1 %or_ln80, i1 %tmp_1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 145 'and' 'and_ln80' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 146 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80 = select i1 %and_ln80, i32 0, i32 %temp_output2_0_load" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 146 'select' 'select_ln80' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 147 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80, i4 %temp_output2_0_addr" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 147 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_19 : Operation 148 [1/1] (0.00ns)   --->   "%bitcast_ln80_1 = bitcast i32 %temp_output2_0_load_1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 148 'bitcast' 'bitcast_ln80_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 149 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_1, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 149 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 150 [1/1] (0.00ns)   --->   "%trunc_ln80_1 = trunc i32 %bitcast_ln80_1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 150 'trunc' 'trunc_ln80_1' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 151 [1/1] (0.85ns)   --->   "%icmp_ln80_2 = icmp_ne  i8 %tmp_2, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 151 'icmp' 'icmp_ln80_2' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 152 [1/1] (0.97ns)   --->   "%icmp_ln80_3 = icmp_eq  i23 %trunc_ln80_1, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 152 'icmp' 'icmp_ln80_3' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_1)   --->   "%or_ln80_1 = or i1 %icmp_ln80_3, i1 %icmp_ln80_2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 153 'or' 'or_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 154 [1/2] (3.34ns)   --->   "%tmp_3 = fcmp_olt  i32 %temp_output2_0_load_1, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 154 'fcmp' 'tmp_3' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_1)   --->   "%and_ln80_1 = and i1 %or_ln80_1, i1 %tmp_3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 155 'and' 'and_ln80_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 156 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_1 = select i1 %and_ln80_1, i32 0, i32 %temp_output2_0_load_1" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 156 'select' 'select_ln80_1' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 157 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_1, i4 %temp_output2_0_addr_1" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 157 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_19 : Operation 158 [2/2] (3.34ns)   --->   "%tmp_5 = fcmp_olt  i32 %temp_output2_0_load_2, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 158 'fcmp' 'tmp_5' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 159 [2/2] (3.34ns)   --->   "%tmp_7 = fcmp_olt  i32 %temp_output2_0_load_3, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 159 'fcmp' 'tmp_7' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 160 [1/2] (0.79ns)   --->   "%temp_output2_0_load_14 = load i4 %temp_output2_0_addr_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 160 'load' 'temp_output2_0_load_14' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_19 : Operation 161 [1/2] (0.79ns)   --->   "%temp_output2_0_load_15 = load i4 %temp_output2_0_addr_15" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 161 'load' 'temp_output2_0_load_15' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 20 <SV = 19> <Delay = 4.66>
ST_20 : Operation 162 [1/1] (0.00ns)   --->   "%bitcast_ln80_2 = bitcast i32 %temp_output2_0_load_2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 162 'bitcast' 'bitcast_ln80_2' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_2, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 163 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 164 [1/1] (0.00ns)   --->   "%trunc_ln80_2 = trunc i32 %bitcast_ln80_2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 164 'trunc' 'trunc_ln80_2' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 165 [1/1] (0.85ns)   --->   "%icmp_ln80_4 = icmp_ne  i8 %tmp_4, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 165 'icmp' 'icmp_ln80_4' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 166 [1/1] (0.97ns)   --->   "%icmp_ln80_5 = icmp_eq  i23 %trunc_ln80_2, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 166 'icmp' 'icmp_ln80_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_2)   --->   "%or_ln80_2 = or i1 %icmp_ln80_5, i1 %icmp_ln80_4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 167 'or' 'or_ln80_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 168 [1/2] (3.34ns)   --->   "%tmp_5 = fcmp_olt  i32 %temp_output2_0_load_2, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 168 'fcmp' 'tmp_5' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_2)   --->   "%and_ln80_2 = and i1 %or_ln80_2, i1 %tmp_5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 169 'and' 'and_ln80_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 170 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_2 = select i1 %and_ln80_2, i32 0, i32 %temp_output2_0_load_2" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 170 'select' 'select_ln80_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 171 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_2, i4 %temp_output2_0_addr_2" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 171 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_20 : Operation 172 [1/1] (0.00ns)   --->   "%bitcast_ln80_3 = bitcast i32 %temp_output2_0_load_3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 172 'bitcast' 'bitcast_ln80_3' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 173 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_3, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 173 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 174 [1/1] (0.00ns)   --->   "%trunc_ln80_3 = trunc i32 %bitcast_ln80_3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 174 'trunc' 'trunc_ln80_3' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 175 [1/1] (0.85ns)   --->   "%icmp_ln80_6 = icmp_ne  i8 %tmp_6, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 175 'icmp' 'icmp_ln80_6' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 176 [1/1] (0.97ns)   --->   "%icmp_ln80_7 = icmp_eq  i23 %trunc_ln80_3, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 176 'icmp' 'icmp_ln80_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 177 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_3)   --->   "%or_ln80_3 = or i1 %icmp_ln80_7, i1 %icmp_ln80_6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 177 'or' 'or_ln80_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 178 [1/2] (3.34ns)   --->   "%tmp_7 = fcmp_olt  i32 %temp_output2_0_load_3, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 178 'fcmp' 'tmp_7' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 179 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_3)   --->   "%and_ln80_3 = and i1 %or_ln80_3, i1 %tmp_7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 179 'and' 'and_ln80_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 180 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_3 = select i1 %and_ln80_3, i32 0, i32 %temp_output2_0_load_3" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 180 'select' 'select_ln80_3' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 181 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_3, i4 %temp_output2_0_addr_3" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 181 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_20 : Operation 182 [2/2] (3.34ns)   --->   "%tmp_9 = fcmp_olt  i32 %temp_output2_0_load_4, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 182 'fcmp' 'tmp_9' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 183 [2/2] (3.34ns)   --->   "%tmp_10 = fcmp_olt  i32 %temp_output2_0_load_5, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 183 'fcmp' 'tmp_10' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 4.66>
ST_21 : Operation 184 [1/1] (0.00ns)   --->   "%bitcast_ln80_4 = bitcast i32 %temp_output2_0_load_4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 184 'bitcast' 'bitcast_ln80_4' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 185 [1/1] (0.00ns)   --->   "%tmp_8 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_4, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 185 'partselect' 'tmp_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 186 [1/1] (0.00ns)   --->   "%trunc_ln80_4 = trunc i32 %bitcast_ln80_4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 186 'trunc' 'trunc_ln80_4' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 187 [1/1] (0.85ns)   --->   "%icmp_ln80_8 = icmp_ne  i8 %tmp_8, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 187 'icmp' 'icmp_ln80_8' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 188 [1/1] (0.97ns)   --->   "%icmp_ln80_9 = icmp_eq  i23 %trunc_ln80_4, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 188 'icmp' 'icmp_ln80_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 189 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_4)   --->   "%or_ln80_4 = or i1 %icmp_ln80_9, i1 %icmp_ln80_8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 189 'or' 'or_ln80_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 190 [1/2] (3.34ns)   --->   "%tmp_9 = fcmp_olt  i32 %temp_output2_0_load_4, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 190 'fcmp' 'tmp_9' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 191 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_4)   --->   "%and_ln80_4 = and i1 %or_ln80_4, i1 %tmp_9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 191 'and' 'and_ln80_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 192 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_4 = select i1 %and_ln80_4, i32 0, i32 %temp_output2_0_load_4" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 192 'select' 'select_ln80_4' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 193 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_4, i4 %temp_output2_0_addr_4" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 193 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_21 : Operation 194 [1/1] (0.00ns)   --->   "%bitcast_ln80_5 = bitcast i32 %temp_output2_0_load_5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 194 'bitcast' 'bitcast_ln80_5' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 195 [1/1] (0.00ns)   --->   "%tmp_s = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_5, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 195 'partselect' 'tmp_s' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 196 [1/1] (0.00ns)   --->   "%trunc_ln80_5 = trunc i32 %bitcast_ln80_5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 196 'trunc' 'trunc_ln80_5' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 197 [1/1] (0.85ns)   --->   "%icmp_ln80_10 = icmp_ne  i8 %tmp_s, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 197 'icmp' 'icmp_ln80_10' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 198 [1/1] (0.97ns)   --->   "%icmp_ln80_11 = icmp_eq  i23 %trunc_ln80_5, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 198 'icmp' 'icmp_ln80_11' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 199 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_5)   --->   "%or_ln80_5 = or i1 %icmp_ln80_11, i1 %icmp_ln80_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 199 'or' 'or_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 200 [1/2] (3.34ns)   --->   "%tmp_10 = fcmp_olt  i32 %temp_output2_0_load_5, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 200 'fcmp' 'tmp_10' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 201 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_5)   --->   "%and_ln80_5 = and i1 %or_ln80_5, i1 %tmp_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 201 'and' 'and_ln80_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 202 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_5 = select i1 %and_ln80_5, i32 0, i32 %temp_output2_0_load_5" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 202 'select' 'select_ln80_5' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 203 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_5, i4 %temp_output2_0_addr_5" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 203 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_21 : Operation 204 [2/2] (3.34ns)   --->   "%tmp_12 = fcmp_olt  i32 %temp_output2_0_load_6, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 204 'fcmp' 'tmp_12' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 205 [2/2] (3.34ns)   --->   "%tmp_14 = fcmp_olt  i32 %temp_output2_0_load_7, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 205 'fcmp' 'tmp_14' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 4.66>
ST_22 : Operation 206 [1/1] (0.00ns)   --->   "%bitcast_ln80_6 = bitcast i32 %temp_output2_0_load_6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 206 'bitcast' 'bitcast_ln80_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 207 [1/1] (0.00ns)   --->   "%tmp_11 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_6, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 207 'partselect' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 208 [1/1] (0.00ns)   --->   "%trunc_ln80_6 = trunc i32 %bitcast_ln80_6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 208 'trunc' 'trunc_ln80_6' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 209 [1/1] (0.85ns)   --->   "%icmp_ln80_12 = icmp_ne  i8 %tmp_11, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 209 'icmp' 'icmp_ln80_12' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 210 [1/1] (0.97ns)   --->   "%icmp_ln80_13 = icmp_eq  i23 %trunc_ln80_6, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 210 'icmp' 'icmp_ln80_13' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 211 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_6)   --->   "%or_ln80_6 = or i1 %icmp_ln80_13, i1 %icmp_ln80_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 211 'or' 'or_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 212 [1/2] (3.34ns)   --->   "%tmp_12 = fcmp_olt  i32 %temp_output2_0_load_6, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 212 'fcmp' 'tmp_12' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 213 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_6)   --->   "%and_ln80_6 = and i1 %or_ln80_6, i1 %tmp_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 213 'and' 'and_ln80_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 214 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_6 = select i1 %and_ln80_6, i32 0, i32 %temp_output2_0_load_6" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 214 'select' 'select_ln80_6' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 215 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_6, i4 %temp_output2_0_addr_6" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 215 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_22 : Operation 216 [1/1] (0.00ns)   --->   "%bitcast_ln80_7 = bitcast i32 %temp_output2_0_load_7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 216 'bitcast' 'bitcast_ln80_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 217 [1/1] (0.00ns)   --->   "%tmp_13 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_7, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 217 'partselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 218 [1/1] (0.00ns)   --->   "%trunc_ln80_7 = trunc i32 %bitcast_ln80_7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 218 'trunc' 'trunc_ln80_7' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 219 [1/1] (0.85ns)   --->   "%icmp_ln80_14 = icmp_ne  i8 %tmp_13, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 219 'icmp' 'icmp_ln80_14' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 220 [1/1] (0.97ns)   --->   "%icmp_ln80_15 = icmp_eq  i23 %trunc_ln80_7, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 220 'icmp' 'icmp_ln80_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 221 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_7)   --->   "%or_ln80_7 = or i1 %icmp_ln80_15, i1 %icmp_ln80_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 221 'or' 'or_ln80_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 222 [1/2] (3.34ns)   --->   "%tmp_14 = fcmp_olt  i32 %temp_output2_0_load_7, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 222 'fcmp' 'tmp_14' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 223 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_7)   --->   "%and_ln80_7 = and i1 %or_ln80_7, i1 %tmp_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 223 'and' 'and_ln80_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 224 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_7 = select i1 %and_ln80_7, i32 0, i32 %temp_output2_0_load_7" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 224 'select' 'select_ln80_7' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 225 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_7, i4 %temp_output2_0_addr_7" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 225 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_22 : Operation 226 [2/2] (3.34ns)   --->   "%tmp_16 = fcmp_olt  i32 %temp_output2_0_load_8, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 226 'fcmp' 'tmp_16' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 227 [2/2] (3.34ns)   --->   "%tmp_18 = fcmp_olt  i32 %temp_output2_0_load_9, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 227 'fcmp' 'tmp_18' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 4.66>
ST_23 : Operation 228 [1/1] (0.00ns)   --->   "%bitcast_ln80_8 = bitcast i32 %temp_output2_0_load_8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 228 'bitcast' 'bitcast_ln80_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 229 [1/1] (0.00ns)   --->   "%tmp_15 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_8, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 229 'partselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 230 [1/1] (0.00ns)   --->   "%trunc_ln80_8 = trunc i32 %bitcast_ln80_8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 230 'trunc' 'trunc_ln80_8' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 231 [1/1] (0.85ns)   --->   "%icmp_ln80_16 = icmp_ne  i8 %tmp_15, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 231 'icmp' 'icmp_ln80_16' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 232 [1/1] (0.97ns)   --->   "%icmp_ln80_17 = icmp_eq  i23 %trunc_ln80_8, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 232 'icmp' 'icmp_ln80_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 233 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_8)   --->   "%or_ln80_8 = or i1 %icmp_ln80_17, i1 %icmp_ln80_16" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 233 'or' 'or_ln80_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 234 [1/2] (3.34ns)   --->   "%tmp_16 = fcmp_olt  i32 %temp_output2_0_load_8, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 234 'fcmp' 'tmp_16' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 235 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_8)   --->   "%and_ln80_8 = and i1 %or_ln80_8, i1 %tmp_16" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 235 'and' 'and_ln80_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 236 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_8 = select i1 %and_ln80_8, i32 0, i32 %temp_output2_0_load_8" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 236 'select' 'select_ln80_8' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 237 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_8, i4 %temp_output2_0_addr_8" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 237 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_23 : Operation 238 [1/1] (0.00ns)   --->   "%bitcast_ln80_9 = bitcast i32 %temp_output2_0_load_9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 238 'bitcast' 'bitcast_ln80_9' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 239 [1/1] (0.00ns)   --->   "%tmp_17 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_9, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 239 'partselect' 'tmp_17' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 240 [1/1] (0.00ns)   --->   "%trunc_ln80_9 = trunc i32 %bitcast_ln80_9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 240 'trunc' 'trunc_ln80_9' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 241 [1/1] (0.85ns)   --->   "%icmp_ln80_18 = icmp_ne  i8 %tmp_17, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 241 'icmp' 'icmp_ln80_18' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 242 [1/1] (0.97ns)   --->   "%icmp_ln80_19 = icmp_eq  i23 %trunc_ln80_9, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 242 'icmp' 'icmp_ln80_19' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 243 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_9)   --->   "%or_ln80_9 = or i1 %icmp_ln80_19, i1 %icmp_ln80_18" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 243 'or' 'or_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 244 [1/2] (3.34ns)   --->   "%tmp_18 = fcmp_olt  i32 %temp_output2_0_load_9, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 244 'fcmp' 'tmp_18' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_9)   --->   "%and_ln80_9 = and i1 %or_ln80_9, i1 %tmp_18" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 245 'and' 'and_ln80_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 246 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_9 = select i1 %and_ln80_9, i32 0, i32 %temp_output2_0_load_9" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 246 'select' 'select_ln80_9' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 247 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_9, i4 %temp_output2_0_addr_9" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 247 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_23 : Operation 248 [2/2] (3.34ns)   --->   "%tmp_20 = fcmp_olt  i32 %temp_output2_0_load_10, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 248 'fcmp' 'tmp_20' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 249 [2/2] (3.34ns)   --->   "%tmp_22 = fcmp_olt  i32 %temp_output2_0_load_11, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 249 'fcmp' 'tmp_22' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 4.66>
ST_24 : Operation 250 [1/1] (0.00ns)   --->   "%bitcast_ln80_10 = bitcast i32 %temp_output2_0_load_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 250 'bitcast' 'bitcast_ln80_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 251 [1/1] (0.00ns)   --->   "%tmp_19 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_10, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 251 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 252 [1/1] (0.00ns)   --->   "%trunc_ln80_10 = trunc i32 %bitcast_ln80_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 252 'trunc' 'trunc_ln80_10' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 253 [1/1] (0.85ns)   --->   "%icmp_ln80_20 = icmp_ne  i8 %tmp_19, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 253 'icmp' 'icmp_ln80_20' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 254 [1/1] (0.97ns)   --->   "%icmp_ln80_21 = icmp_eq  i23 %trunc_ln80_10, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 254 'icmp' 'icmp_ln80_21' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 255 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_10)   --->   "%or_ln80_10 = or i1 %icmp_ln80_21, i1 %icmp_ln80_20" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 255 'or' 'or_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 256 [1/2] (3.34ns)   --->   "%tmp_20 = fcmp_olt  i32 %temp_output2_0_load_10, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 256 'fcmp' 'tmp_20' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 257 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_10)   --->   "%and_ln80_10 = and i1 %or_ln80_10, i1 %tmp_20" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 257 'and' 'and_ln80_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 258 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_10 = select i1 %and_ln80_10, i32 0, i32 %temp_output2_0_load_10" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 258 'select' 'select_ln80_10' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 259 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_10, i4 %temp_output2_0_addr_10" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 259 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_24 : Operation 260 [1/1] (0.00ns)   --->   "%bitcast_ln80_11 = bitcast i32 %temp_output2_0_load_11" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 260 'bitcast' 'bitcast_ln80_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 261 [1/1] (0.00ns)   --->   "%tmp_21 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_11, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 261 'partselect' 'tmp_21' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 262 [1/1] (0.00ns)   --->   "%trunc_ln80_11 = trunc i32 %bitcast_ln80_11" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 262 'trunc' 'trunc_ln80_11' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 263 [1/1] (0.85ns)   --->   "%icmp_ln80_22 = icmp_ne  i8 %tmp_21, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 263 'icmp' 'icmp_ln80_22' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 264 [1/1] (0.97ns)   --->   "%icmp_ln80_23 = icmp_eq  i23 %trunc_ln80_11, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 264 'icmp' 'icmp_ln80_23' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 265 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_11)   --->   "%or_ln80_11 = or i1 %icmp_ln80_23, i1 %icmp_ln80_22" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 265 'or' 'or_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 266 [1/2] (3.34ns)   --->   "%tmp_22 = fcmp_olt  i32 %temp_output2_0_load_11, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 266 'fcmp' 'tmp_22' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 267 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_11)   --->   "%and_ln80_11 = and i1 %or_ln80_11, i1 %tmp_22" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 267 'and' 'and_ln80_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 268 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_11 = select i1 %and_ln80_11, i32 0, i32 %temp_output2_0_load_11" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 268 'select' 'select_ln80_11' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 269 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_11, i4 %temp_output2_0_addr_11" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 269 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_24 : Operation 270 [2/2] (3.34ns)   --->   "%tmp_24 = fcmp_olt  i32 %temp_output2_0_load_12, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 270 'fcmp' 'tmp_24' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 271 [2/2] (3.34ns)   --->   "%tmp_26 = fcmp_olt  i32 %temp_output2_0_load_13, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 271 'fcmp' 'tmp_26' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 4.66>
ST_25 : Operation 272 [1/1] (0.00ns)   --->   "%bitcast_ln80_12 = bitcast i32 %temp_output2_0_load_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 272 'bitcast' 'bitcast_ln80_12' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 273 [1/1] (0.00ns)   --->   "%tmp_23 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_12, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 273 'partselect' 'tmp_23' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 274 [1/1] (0.00ns)   --->   "%trunc_ln80_12 = trunc i32 %bitcast_ln80_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 274 'trunc' 'trunc_ln80_12' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 275 [1/1] (0.85ns)   --->   "%icmp_ln80_24 = icmp_ne  i8 %tmp_23, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 275 'icmp' 'icmp_ln80_24' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 276 [1/1] (0.97ns)   --->   "%icmp_ln80_25 = icmp_eq  i23 %trunc_ln80_12, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 276 'icmp' 'icmp_ln80_25' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 277 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_12)   --->   "%or_ln80_12 = or i1 %icmp_ln80_25, i1 %icmp_ln80_24" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 277 'or' 'or_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 278 [1/2] (3.34ns)   --->   "%tmp_24 = fcmp_olt  i32 %temp_output2_0_load_12, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 278 'fcmp' 'tmp_24' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 279 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_12)   --->   "%and_ln80_12 = and i1 %or_ln80_12, i1 %tmp_24" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 279 'and' 'and_ln80_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 280 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_12 = select i1 %and_ln80_12, i32 0, i32 %temp_output2_0_load_12" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 280 'select' 'select_ln80_12' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 281 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_12, i4 %temp_output2_0_addr_12" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 281 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_25 : Operation 282 [1/1] (0.00ns)   --->   "%bitcast_ln80_13 = bitcast i32 %temp_output2_0_load_13" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 282 'bitcast' 'bitcast_ln80_13' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 283 [1/1] (0.00ns)   --->   "%tmp_25 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_13, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 283 'partselect' 'tmp_25' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 284 [1/1] (0.00ns)   --->   "%trunc_ln80_13 = trunc i32 %bitcast_ln80_13" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 284 'trunc' 'trunc_ln80_13' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 285 [1/1] (0.85ns)   --->   "%icmp_ln80_26 = icmp_ne  i8 %tmp_25, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 285 'icmp' 'icmp_ln80_26' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 286 [1/1] (0.97ns)   --->   "%icmp_ln80_27 = icmp_eq  i23 %trunc_ln80_13, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 286 'icmp' 'icmp_ln80_27' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 287 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_13)   --->   "%or_ln80_13 = or i1 %icmp_ln80_27, i1 %icmp_ln80_26" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 287 'or' 'or_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 288 [1/2] (3.34ns)   --->   "%tmp_26 = fcmp_olt  i32 %temp_output2_0_load_13, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 288 'fcmp' 'tmp_26' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 289 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_13)   --->   "%and_ln80_13 = and i1 %or_ln80_13, i1 %tmp_26" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 289 'and' 'and_ln80_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 290 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_13 = select i1 %and_ln80_13, i32 0, i32 %temp_output2_0_load_13" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 290 'select' 'select_ln80_13' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 291 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_13, i4 %temp_output2_0_addr_13" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 291 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_25 : Operation 292 [2/2] (3.34ns)   --->   "%tmp_28 = fcmp_olt  i32 %temp_output2_0_load_14, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 292 'fcmp' 'tmp_28' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 293 [2/2] (3.34ns)   --->   "%tmp_30 = fcmp_olt  i32 %temp_output2_0_load_15, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 293 'fcmp' 'tmp_30' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 4.66>
ST_26 : Operation 294 [1/1] (0.00ns)   --->   "%bitcast_ln80_14 = bitcast i32 %temp_output2_0_load_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 294 'bitcast' 'bitcast_ln80_14' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 295 [1/1] (0.00ns)   --->   "%tmp_27 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_14, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 295 'partselect' 'tmp_27' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 296 [1/1] (0.00ns)   --->   "%trunc_ln80_14 = trunc i32 %bitcast_ln80_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 296 'trunc' 'trunc_ln80_14' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 297 [1/1] (0.85ns)   --->   "%icmp_ln80_28 = icmp_ne  i8 %tmp_27, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 297 'icmp' 'icmp_ln80_28' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 298 [1/1] (0.97ns)   --->   "%icmp_ln80_29 = icmp_eq  i23 %trunc_ln80_14, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 298 'icmp' 'icmp_ln80_29' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 299 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_14)   --->   "%or_ln80_14 = or i1 %icmp_ln80_29, i1 %icmp_ln80_28" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 299 'or' 'or_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 300 [1/2] (3.34ns)   --->   "%tmp_28 = fcmp_olt  i32 %temp_output2_0_load_14, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 300 'fcmp' 'tmp_28' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 301 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_14)   --->   "%and_ln80_14 = and i1 %or_ln80_14, i1 %tmp_28" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 301 'and' 'and_ln80_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 302 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_14 = select i1 %and_ln80_14, i32 0, i32 %temp_output2_0_load_14" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 302 'select' 'select_ln80_14' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 303 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_14, i4 %temp_output2_0_addr_14" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 303 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_26 : Operation 304 [1/1] (0.00ns)   --->   "%bitcast_ln80_15 = bitcast i32 %temp_output2_0_load_15" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 304 'bitcast' 'bitcast_ln80_15' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 305 [1/1] (0.00ns)   --->   "%tmp_29 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln80_15, i32 23, i32 30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 305 'partselect' 'tmp_29' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 306 [1/1] (0.00ns)   --->   "%trunc_ln80_15 = trunc i32 %bitcast_ln80_15" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 306 'trunc' 'trunc_ln80_15' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 307 [1/1] (0.85ns)   --->   "%icmp_ln80_30 = icmp_ne  i8 %tmp_29, i8 255" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 307 'icmp' 'icmp_ln80_30' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 308 [1/1] (0.97ns)   --->   "%icmp_ln80_31 = icmp_eq  i23 %trunc_ln80_15, i23 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 308 'icmp' 'icmp_ln80_31' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 309 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_15)   --->   "%or_ln80_15 = or i1 %icmp_ln80_31, i1 %icmp_ln80_30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 309 'or' 'or_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 310 [1/2] (3.34ns)   --->   "%tmp_30 = fcmp_olt  i32 %temp_output2_0_load_15, i32 0" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 310 'fcmp' 'tmp_30' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 311 [1/1] (0.00ns) (grouped into LUT with out node select_ln80_15)   --->   "%and_ln80_15 = and i1 %or_ln80_15, i1 %tmp_30" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 311 'and' 'and_ln80_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 312 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln80_15 = select i1 %and_ln80_15, i32 0, i32 %temp_output2_0_load_15" [matmul.cpp:80->matmul.cpp:122]   --->   Operation 312 'select' 'select_ln80_15' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 313 [1/1] (0.79ns)   --->   "%store_ln81 = store i32 %select_ln80_15, i4 %temp_output2_0_addr_15" [matmul.cpp:81->matmul.cpp:122]   --->   Operation 313 'store' 'store_ln81' <Predicate = true> <Delay = 0.79> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 0.79> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 27 <SV = 26> <Delay = 0.00>
ST_27 : Operation 314 [2/2] (0.00ns)   --->   "%l3_mm_ret = call i320 @l3_mm, i32 %temp_output2_0" [matmul.cpp:123]   --->   Operation 314 'call' 'l3_mm_ret' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 28 <SV = 27> <Delay = 6.01>
ST_28 : Operation 315 [1/2] (6.01ns)   --->   "%l3_mm_ret = call i320 @l3_mm, i32 %temp_output2_0" [matmul.cpp:123]   --->   Operation 315 'call' 'l3_mm_ret' <Predicate = true> <Delay = 6.01> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_28 : Operation 316 [1/1] (0.00ns)   --->   "%max_val = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 316 'extractvalue' 'max_val' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 317 [1/1] (0.00ns)   --->   "%max_val_2 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 317 'extractvalue' 'max_val_2' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 318 [1/1] (0.00ns)   --->   "%max_val_4 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 318 'extractvalue' 'max_val_4' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 319 [1/1] (0.00ns)   --->   "%max_val_6 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 319 'extractvalue' 'max_val_6' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 320 [1/1] (0.00ns)   --->   "%max_val_8 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 320 'extractvalue' 'max_val_8' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 321 [1/1] (0.00ns)   --->   "%max_val_13 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 321 'extractvalue' 'max_val_13' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 322 [1/1] (0.00ns)   --->   "%max_val_10 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 322 'extractvalue' 'max_val_10' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 323 [1/1] (0.00ns)   --->   "%max_val_11 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 323 'extractvalue' 'max_val_11' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 324 [1/1] (0.00ns)   --->   "%max_val_12 = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 324 'extractvalue' 'max_val_12' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 325 [1/1] (0.00ns)   --->   "%temp_output3_0_9_ret = extractvalue i320 %l3_mm_ret" [matmul.cpp:123]   --->   Operation 325 'extractvalue' 'temp_output3_0_9_ret' <Predicate = true> <Delay = 0.00>

State 29 <SV = 28> <Delay = 3.34>
ST_29 : Operation 326 [2/2] (3.34ns)   --->   "%tmp_32 = fcmp_ogt  i32 %max_val, i32 -999.9" [matmul.cpp:97]   --->   Operation 326 'fcmp' 'tmp_32' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 3.67>
ST_30 : Operation 327 [1/1] (0.00ns)   --->   "%bitcast_ln97 = bitcast i32 %max_val" [matmul.cpp:97]   --->   Operation 327 'bitcast' 'bitcast_ln97' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 328 [1/1] (0.00ns)   --->   "%tmp_31 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 328 'partselect' 'tmp_31' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 329 [1/1] (0.00ns)   --->   "%trunc_ln97 = trunc i32 %bitcast_ln97" [matmul.cpp:97]   --->   Operation 329 'trunc' 'trunc_ln97' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 330 [1/1] (0.85ns)   --->   "%icmp_ln97 = icmp_ne  i8 %tmp_31, i8 255" [matmul.cpp:97]   --->   Operation 330 'icmp' 'icmp_ln97' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 331 [1/1] (0.97ns)   --->   "%icmp_ln97_1 = icmp_eq  i23 %trunc_ln97, i23 0" [matmul.cpp:97]   --->   Operation 331 'icmp' 'icmp_ln97_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 332 [1/1] (0.00ns) (grouped into LUT with out node and_ln97)   --->   "%or_ln97_5 = or i1 %icmp_ln97_1, i1 %icmp_ln97" [matmul.cpp:97]   --->   Operation 332 'or' 'or_ln97_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 333 [1/2] (3.34ns)   --->   "%tmp_32 = fcmp_ogt  i32 %max_val, i32 -999.9" [matmul.cpp:97]   --->   Operation 333 'fcmp' 'tmp_32' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 334 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97 = and i1 %or_ln97_5, i1 %tmp_32" [matmul.cpp:97]   --->   Operation 334 'and' 'and_ln97' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 3.87>
ST_31 : Operation 335 [1/1] (0.52ns)   --->   "%max_val_1 = select i1 %and_ln97, i32 %max_val, i32 -999.9" [matmul.cpp:97]   --->   Operation 335 'select' 'max_val_1' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 336 [2/2] (3.34ns)   --->   "%tmp_35 = fcmp_ogt  i32 %max_val_2, i32 %max_val_1" [matmul.cpp:97]   --->   Operation 336 'fcmp' 'tmp_35' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 4.20>
ST_32 : Operation 337 [1/1] (0.00ns)   --->   "%bitcast_ln97_1 = bitcast i32 %max_val_2" [matmul.cpp:97]   --->   Operation 337 'bitcast' 'bitcast_ln97_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 338 [1/1] (0.00ns)   --->   "%tmp_33 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_1, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 338 'partselect' 'tmp_33' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 339 [1/1] (0.00ns)   --->   "%trunc_ln97_1 = trunc i32 %bitcast_ln97_1" [matmul.cpp:97]   --->   Operation 339 'trunc' 'trunc_ln97_1' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 340 [1/1] (0.00ns)   --->   "%bitcast_ln97_2 = bitcast i32 %max_val_1" [matmul.cpp:97]   --->   Operation 340 'bitcast' 'bitcast_ln97_2' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 341 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_2, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 341 'partselect' 'tmp_34' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 342 [1/1] (0.00ns)   --->   "%trunc_ln97_2 = trunc i32 %bitcast_ln97_2" [matmul.cpp:97]   --->   Operation 342 'trunc' 'trunc_ln97_2' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 343 [1/1] (0.85ns)   --->   "%icmp_ln97_2 = icmp_ne  i8 %tmp_33, i8 255" [matmul.cpp:97]   --->   Operation 343 'icmp' 'icmp_ln97_2' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 344 [1/1] (0.97ns)   --->   "%icmp_ln97_3 = icmp_eq  i23 %trunc_ln97_1, i23 0" [matmul.cpp:97]   --->   Operation 344 'icmp' 'icmp_ln97_3' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 345 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_2)   --->   "%or_ln97_6 = or i1 %icmp_ln97_3, i1 %icmp_ln97_2" [matmul.cpp:97]   --->   Operation 345 'or' 'or_ln97_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 346 [1/1] (0.85ns)   --->   "%icmp_ln97_4 = icmp_ne  i8 %tmp_34, i8 255" [matmul.cpp:97]   --->   Operation 346 'icmp' 'icmp_ln97_4' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 347 [1/1] (0.97ns)   --->   "%icmp_ln97_5 = icmp_eq  i23 %trunc_ln97_2, i23 0" [matmul.cpp:97]   --->   Operation 347 'icmp' 'icmp_ln97_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 348 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_2)   --->   "%or_ln97_7 = or i1 %icmp_ln97_5, i1 %icmp_ln97_4" [matmul.cpp:97]   --->   Operation 348 'or' 'or_ln97_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 349 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_2)   --->   "%and_ln97_1 = and i1 %or_ln97_6, i1 %or_ln97_7" [matmul.cpp:97]   --->   Operation 349 'and' 'and_ln97_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 350 [1/2] (3.34ns)   --->   "%tmp_35 = fcmp_ogt  i32 %max_val_2, i32 %max_val_1" [matmul.cpp:97]   --->   Operation 350 'fcmp' 'tmp_35' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 351 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_2 = and i1 %and_ln97_1, i1 %tmp_35" [matmul.cpp:97]   --->   Operation 351 'and' 'and_ln97_2' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 352 [1/1] (0.52ns)   --->   "%max_val_3 = select i1 %and_ln97_2, i32 %max_val_2, i32 %max_val_1" [matmul.cpp:97]   --->   Operation 352 'select' 'max_val_3' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 33 <SV = 32> <Delay = 3.34>
ST_33 : Operation 353 [2/2] (3.34ns)   --->   "%tmp_38 = fcmp_ogt  i32 %max_val_4, i32 %max_val_3" [matmul.cpp:97]   --->   Operation 353 'fcmp' 'tmp_38' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 33> <Delay = 4.20>
ST_34 : Operation 354 [1/1] (0.00ns)   --->   "%bitcast_ln97_3 = bitcast i32 %max_val_4" [matmul.cpp:97]   --->   Operation 354 'bitcast' 'bitcast_ln97_3' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 355 [1/1] (0.00ns)   --->   "%tmp_36 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_3, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 355 'partselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 356 [1/1] (0.00ns)   --->   "%trunc_ln97_3 = trunc i32 %bitcast_ln97_3" [matmul.cpp:97]   --->   Operation 356 'trunc' 'trunc_ln97_3' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 357 [1/1] (0.00ns)   --->   "%bitcast_ln97_4 = bitcast i32 %max_val_3" [matmul.cpp:97]   --->   Operation 357 'bitcast' 'bitcast_ln97_4' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 358 [1/1] (0.00ns)   --->   "%tmp_37 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_4, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 358 'partselect' 'tmp_37' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 359 [1/1] (0.00ns)   --->   "%trunc_ln97_4 = trunc i32 %bitcast_ln97_4" [matmul.cpp:97]   --->   Operation 359 'trunc' 'trunc_ln97_4' <Predicate = true> <Delay = 0.00>
ST_34 : Operation 360 [1/1] (0.85ns)   --->   "%icmp_ln97_6 = icmp_ne  i8 %tmp_36, i8 255" [matmul.cpp:97]   --->   Operation 360 'icmp' 'icmp_ln97_6' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 361 [1/1] (0.97ns)   --->   "%icmp_ln97_7 = icmp_eq  i23 %trunc_ln97_3, i23 0" [matmul.cpp:97]   --->   Operation 361 'icmp' 'icmp_ln97_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 362 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_4)   --->   "%or_ln97_8 = or i1 %icmp_ln97_7, i1 %icmp_ln97_6" [matmul.cpp:97]   --->   Operation 362 'or' 'or_ln97_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 363 [1/1] (0.85ns)   --->   "%icmp_ln97_8 = icmp_ne  i8 %tmp_37, i8 255" [matmul.cpp:97]   --->   Operation 363 'icmp' 'icmp_ln97_8' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 364 [1/1] (0.97ns)   --->   "%icmp_ln97_9 = icmp_eq  i23 %trunc_ln97_4, i23 0" [matmul.cpp:97]   --->   Operation 364 'icmp' 'icmp_ln97_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 365 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_4)   --->   "%or_ln97_9 = or i1 %icmp_ln97_9, i1 %icmp_ln97_8" [matmul.cpp:97]   --->   Operation 365 'or' 'or_ln97_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_4)   --->   "%and_ln97_3 = and i1 %or_ln97_8, i1 %or_ln97_9" [matmul.cpp:97]   --->   Operation 366 'and' 'and_ln97_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 367 [1/2] (3.34ns)   --->   "%tmp_38 = fcmp_ogt  i32 %max_val_4, i32 %max_val_3" [matmul.cpp:97]   --->   Operation 367 'fcmp' 'tmp_38' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 368 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_4 = and i1 %and_ln97_3, i1 %tmp_38" [matmul.cpp:97]   --->   Operation 368 'and' 'and_ln97_4' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_34 : Operation 369 [1/1] (0.52ns)   --->   "%max_val_5 = select i1 %and_ln97_4, i32 %max_val_4, i32 %max_val_3" [matmul.cpp:97]   --->   Operation 369 'select' 'max_val_5' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 35 <SV = 34> <Delay = 3.34>
ST_35 : Operation 370 [2/2] (3.34ns)   --->   "%tmp_41 = fcmp_ogt  i32 %max_val_6, i32 %max_val_5" [matmul.cpp:97]   --->   Operation 370 'fcmp' 'tmp_41' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 35> <Delay = 4.20>
ST_36 : Operation 371 [1/1] (0.00ns) (grouped into LUT with out node max_idx_1)   --->   "%zext_ln97 = zext i1 %and_ln97_2" [matmul.cpp:97]   --->   Operation 371 'zext' 'zext_ln97' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 372 [1/1] (0.00ns) (grouped into LUT with out node max_idx_1)   --->   "%or_ln97 = or i1 %and_ln97_2, i1 %and_ln97" [matmul.cpp:97]   --->   Operation 372 'or' 'or_ln97' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 373 [1/1] (0.00ns) (grouped into LUT with out node max_idx_1)   --->   "%max_idx = select i1 %or_ln97, i2 %zext_ln97, i2 3" [matmul.cpp:97]   --->   Operation 373 'select' 'max_idx' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 374 [1/1] (0.00ns) (grouped into LUT with out node max_idx_1)   --->   "%sext_ln97 = sext i2 %max_idx" [matmul.cpp:97]   --->   Operation 374 'sext' 'sext_ln97' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 375 [1/1] (0.00ns)   --->   "%bitcast_ln97_5 = bitcast i32 %max_val_6" [matmul.cpp:97]   --->   Operation 375 'bitcast' 'bitcast_ln97_5' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 376 [1/1] (0.00ns)   --->   "%tmp_39 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_5, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 376 'partselect' 'tmp_39' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 377 [1/1] (0.00ns)   --->   "%trunc_ln97_5 = trunc i32 %bitcast_ln97_5" [matmul.cpp:97]   --->   Operation 377 'trunc' 'trunc_ln97_5' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 378 [1/1] (0.00ns)   --->   "%bitcast_ln97_6 = bitcast i32 %max_val_5" [matmul.cpp:97]   --->   Operation 378 'bitcast' 'bitcast_ln97_6' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 379 [1/1] (0.00ns)   --->   "%tmp_40 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_6, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 379 'partselect' 'tmp_40' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 380 [1/1] (0.00ns)   --->   "%trunc_ln97_6 = trunc i32 %bitcast_ln97_6" [matmul.cpp:97]   --->   Operation 380 'trunc' 'trunc_ln97_6' <Predicate = true> <Delay = 0.00>
ST_36 : Operation 381 [1/1] (0.85ns)   --->   "%icmp_ln97_10 = icmp_ne  i8 %tmp_39, i8 255" [matmul.cpp:97]   --->   Operation 381 'icmp' 'icmp_ln97_10' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 382 [1/1] (0.97ns)   --->   "%icmp_ln97_11 = icmp_eq  i23 %trunc_ln97_5, i23 0" [matmul.cpp:97]   --->   Operation 382 'icmp' 'icmp_ln97_11' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 383 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_6)   --->   "%or_ln97_10 = or i1 %icmp_ln97_11, i1 %icmp_ln97_10" [matmul.cpp:97]   --->   Operation 383 'or' 'or_ln97_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 384 [1/1] (0.85ns)   --->   "%icmp_ln97_12 = icmp_ne  i8 %tmp_40, i8 255" [matmul.cpp:97]   --->   Operation 384 'icmp' 'icmp_ln97_12' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 385 [1/1] (0.97ns)   --->   "%icmp_ln97_13 = icmp_eq  i23 %trunc_ln97_6, i23 0" [matmul.cpp:97]   --->   Operation 385 'icmp' 'icmp_ln97_13' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 386 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_6)   --->   "%or_ln97_11 = or i1 %icmp_ln97_13, i1 %icmp_ln97_12" [matmul.cpp:97]   --->   Operation 386 'or' 'or_ln97_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 387 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_6)   --->   "%and_ln97_5 = and i1 %or_ln97_10, i1 %or_ln97_11" [matmul.cpp:97]   --->   Operation 387 'and' 'and_ln97_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 388 [1/2] (3.34ns)   --->   "%tmp_41 = fcmp_ogt  i32 %max_val_6, i32 %max_val_5" [matmul.cpp:97]   --->   Operation 388 'fcmp' 'tmp_41' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 389 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_6 = and i1 %and_ln97_5, i1 %tmp_41" [matmul.cpp:97]   --->   Operation 389 'and' 'and_ln97_6' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node max_idx_1)   --->   "%select_ln97 = select i1 %and_ln97_6, i3 3, i3 2" [matmul.cpp:97]   --->   Operation 390 'select' 'select_ln97' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 391 [1/1] (0.00ns) (grouped into LUT with out node max_idx_1)   --->   "%or_ln97_1 = or i1 %and_ln97_6, i1 %and_ln97_4" [matmul.cpp:97]   --->   Operation 391 'or' 'or_ln97_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 392 [1/1] (0.33ns) (out node of the LUT)   --->   "%max_idx_1 = select i1 %or_ln97_1, i3 %select_ln97, i3 %sext_ln97" [matmul.cpp:97]   --->   Operation 392 'select' 'max_idx_1' <Predicate = true> <Delay = 0.33> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_36 : Operation 393 [1/1] (0.52ns)   --->   "%max_val_7 = select i1 %and_ln97_6, i32 %max_val_6, i32 %max_val_5" [matmul.cpp:97]   --->   Operation 393 'select' 'max_val_7' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 37 <SV = 36> <Delay = 3.34>
ST_37 : Operation 394 [2/2] (3.34ns)   --->   "%tmp_44 = fcmp_ogt  i32 %max_val_8, i32 %max_val_7" [matmul.cpp:97]   --->   Operation 394 'fcmp' 'tmp_44' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 37> <Delay = 4.20>
ST_38 : Operation 395 [1/1] (0.00ns)   --->   "%bitcast_ln97_7 = bitcast i32 %max_val_8" [matmul.cpp:97]   --->   Operation 395 'bitcast' 'bitcast_ln97_7' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 396 [1/1] (0.00ns)   --->   "%tmp_42 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_7, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 396 'partselect' 'tmp_42' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 397 [1/1] (0.00ns)   --->   "%trunc_ln97_7 = trunc i32 %bitcast_ln97_7" [matmul.cpp:97]   --->   Operation 397 'trunc' 'trunc_ln97_7' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 398 [1/1] (0.00ns)   --->   "%bitcast_ln97_8 = bitcast i32 %max_val_7" [matmul.cpp:97]   --->   Operation 398 'bitcast' 'bitcast_ln97_8' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 399 [1/1] (0.00ns)   --->   "%tmp_43 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_8, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 399 'partselect' 'tmp_43' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 400 [1/1] (0.00ns)   --->   "%trunc_ln97_8 = trunc i32 %bitcast_ln97_8" [matmul.cpp:97]   --->   Operation 400 'trunc' 'trunc_ln97_8' <Predicate = true> <Delay = 0.00>
ST_38 : Operation 401 [1/1] (0.85ns)   --->   "%icmp_ln97_14 = icmp_ne  i8 %tmp_42, i8 255" [matmul.cpp:97]   --->   Operation 401 'icmp' 'icmp_ln97_14' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 402 [1/1] (0.97ns)   --->   "%icmp_ln97_15 = icmp_eq  i23 %trunc_ln97_7, i23 0" [matmul.cpp:97]   --->   Operation 402 'icmp' 'icmp_ln97_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 403 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_8)   --->   "%or_ln97_12 = or i1 %icmp_ln97_15, i1 %icmp_ln97_14" [matmul.cpp:97]   --->   Operation 403 'or' 'or_ln97_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 404 [1/1] (0.85ns)   --->   "%icmp_ln97_16 = icmp_ne  i8 %tmp_43, i8 255" [matmul.cpp:97]   --->   Operation 404 'icmp' 'icmp_ln97_16' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 405 [1/1] (0.97ns)   --->   "%icmp_ln97_17 = icmp_eq  i23 %trunc_ln97_8, i23 0" [matmul.cpp:97]   --->   Operation 405 'icmp' 'icmp_ln97_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 406 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_8)   --->   "%or_ln97_13 = or i1 %icmp_ln97_17, i1 %icmp_ln97_16" [matmul.cpp:97]   --->   Operation 406 'or' 'or_ln97_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 407 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_8)   --->   "%and_ln97_7 = and i1 %or_ln97_12, i1 %or_ln97_13" [matmul.cpp:97]   --->   Operation 407 'and' 'and_ln97_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 408 [1/2] (3.34ns)   --->   "%tmp_44 = fcmp_ogt  i32 %max_val_8, i32 %max_val_7" [matmul.cpp:97]   --->   Operation 408 'fcmp' 'tmp_44' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 409 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_8 = and i1 %and_ln97_7, i1 %tmp_44" [matmul.cpp:97]   --->   Operation 409 'and' 'and_ln97_8' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_38 : Operation 410 [1/1] (0.52ns)   --->   "%max_val_9 = select i1 %and_ln97_8, i32 %max_val_8, i32 %max_val_7" [matmul.cpp:97]   --->   Operation 410 'select' 'max_val_9' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 39 <SV = 38> <Delay = 3.34>
ST_39 : Operation 411 [2/2] (3.34ns)   --->   "%tmp_47 = fcmp_ogt  i32 %max_val_13, i32 %max_val_9" [matmul.cpp:97]   --->   Operation 411 'fcmp' 'tmp_47' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 39> <Delay = 4.20>
ST_40 : Operation 412 [1/1] (0.00ns) (grouped into LUT with out node max_idx_2)   --->   "%sext_ln97_1 = sext i3 %max_idx_1" [matmul.cpp:97]   --->   Operation 412 'sext' 'sext_ln97_1' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 413 [1/1] (0.00ns)   --->   "%bitcast_ln97_9 = bitcast i32 %max_val_13" [matmul.cpp:97]   --->   Operation 413 'bitcast' 'bitcast_ln97_9' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 414 [1/1] (0.00ns)   --->   "%tmp_45 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_9, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 414 'partselect' 'tmp_45' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 415 [1/1] (0.00ns)   --->   "%trunc_ln97_9 = trunc i32 %bitcast_ln97_9" [matmul.cpp:97]   --->   Operation 415 'trunc' 'trunc_ln97_9' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 416 [1/1] (0.00ns)   --->   "%bitcast_ln97_10 = bitcast i32 %max_val_9" [matmul.cpp:97]   --->   Operation 416 'bitcast' 'bitcast_ln97_10' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 417 [1/1] (0.00ns)   --->   "%tmp_46 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_10, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 417 'partselect' 'tmp_46' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 418 [1/1] (0.00ns)   --->   "%trunc_ln97_10 = trunc i32 %bitcast_ln97_10" [matmul.cpp:97]   --->   Operation 418 'trunc' 'trunc_ln97_10' <Predicate = true> <Delay = 0.00>
ST_40 : Operation 419 [1/1] (0.85ns)   --->   "%icmp_ln97_18 = icmp_ne  i8 %tmp_45, i8 255" [matmul.cpp:97]   --->   Operation 419 'icmp' 'icmp_ln97_18' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 420 [1/1] (0.97ns)   --->   "%icmp_ln97_19 = icmp_eq  i23 %trunc_ln97_9, i23 0" [matmul.cpp:97]   --->   Operation 420 'icmp' 'icmp_ln97_19' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 421 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_10)   --->   "%or_ln97_14 = or i1 %icmp_ln97_19, i1 %icmp_ln97_18" [matmul.cpp:97]   --->   Operation 421 'or' 'or_ln97_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 422 [1/1] (0.85ns)   --->   "%icmp_ln97_20 = icmp_ne  i8 %tmp_46, i8 255" [matmul.cpp:97]   --->   Operation 422 'icmp' 'icmp_ln97_20' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 423 [1/1] (0.97ns)   --->   "%icmp_ln97_21 = icmp_eq  i23 %trunc_ln97_10, i23 0" [matmul.cpp:97]   --->   Operation 423 'icmp' 'icmp_ln97_21' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_10)   --->   "%or_ln97_15 = or i1 %icmp_ln97_21, i1 %icmp_ln97_20" [matmul.cpp:97]   --->   Operation 424 'or' 'or_ln97_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 425 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_10)   --->   "%and_ln97_9 = and i1 %or_ln97_14, i1 %or_ln97_15" [matmul.cpp:97]   --->   Operation 425 'and' 'and_ln97_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 426 [1/2] (3.34ns)   --->   "%tmp_47 = fcmp_ogt  i32 %max_val_13, i32 %max_val_9" [matmul.cpp:97]   --->   Operation 426 'fcmp' 'tmp_47' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 427 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_10 = and i1 %and_ln97_9, i1 %tmp_47" [matmul.cpp:97]   --->   Operation 427 'and' 'and_ln97_10' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 428 [1/1] (0.00ns) (grouped into LUT with out node max_idx_2)   --->   "%select_ln97_5 = select i1 %and_ln97_10, i4 5, i4 4" [matmul.cpp:97]   --->   Operation 428 'select' 'select_ln97_5' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 429 [1/1] (0.00ns) (grouped into LUT with out node max_idx_2)   --->   "%or_ln97_2 = or i1 %and_ln97_10, i1 %and_ln97_8" [matmul.cpp:97]   --->   Operation 429 'or' 'or_ln97_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 430 [1/1] (0.45ns) (out node of the LUT)   --->   "%max_idx_2 = select i1 %or_ln97_2, i4 %select_ln97_5, i4 %sext_ln97_1" [matmul.cpp:97]   --->   Operation 430 'select' 'max_idx_2' <Predicate = true> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 431 [1/1] (0.52ns)   --->   "%max_val_14 = select i1 %and_ln97_10, i32 %max_val_13, i32 %max_val_9" [matmul.cpp:97]   --->   Operation 431 'select' 'max_val_14' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 41 <SV = 40> <Delay = 3.34>
ST_41 : Operation 432 [2/2] (3.34ns)   --->   "%tmp_50 = fcmp_ogt  i32 %max_val_10, i32 %max_val_14" [matmul.cpp:97]   --->   Operation 432 'fcmp' 'tmp_50' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 41> <Delay = 4.20>
ST_42 : Operation 433 [1/1] (0.00ns)   --->   "%bitcast_ln97_11 = bitcast i32 %max_val_10" [matmul.cpp:97]   --->   Operation 433 'bitcast' 'bitcast_ln97_11' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 434 [1/1] (0.00ns)   --->   "%tmp_48 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_11, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 434 'partselect' 'tmp_48' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 435 [1/1] (0.00ns)   --->   "%trunc_ln97_11 = trunc i32 %bitcast_ln97_11" [matmul.cpp:97]   --->   Operation 435 'trunc' 'trunc_ln97_11' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 436 [1/1] (0.00ns)   --->   "%bitcast_ln97_12 = bitcast i32 %max_val_14" [matmul.cpp:97]   --->   Operation 436 'bitcast' 'bitcast_ln97_12' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 437 [1/1] (0.00ns)   --->   "%tmp_49 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_12, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 437 'partselect' 'tmp_49' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 438 [1/1] (0.00ns)   --->   "%trunc_ln97_12 = trunc i32 %bitcast_ln97_12" [matmul.cpp:97]   --->   Operation 438 'trunc' 'trunc_ln97_12' <Predicate = true> <Delay = 0.00>
ST_42 : Operation 439 [1/1] (0.85ns)   --->   "%icmp_ln97_22 = icmp_ne  i8 %tmp_48, i8 255" [matmul.cpp:97]   --->   Operation 439 'icmp' 'icmp_ln97_22' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 440 [1/1] (0.97ns)   --->   "%icmp_ln97_23 = icmp_eq  i23 %trunc_ln97_11, i23 0" [matmul.cpp:97]   --->   Operation 440 'icmp' 'icmp_ln97_23' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 441 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_12)   --->   "%or_ln97_16 = or i1 %icmp_ln97_23, i1 %icmp_ln97_22" [matmul.cpp:97]   --->   Operation 441 'or' 'or_ln97_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 442 [1/1] (0.85ns)   --->   "%icmp_ln97_24 = icmp_ne  i8 %tmp_49, i8 255" [matmul.cpp:97]   --->   Operation 442 'icmp' 'icmp_ln97_24' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 443 [1/1] (0.97ns)   --->   "%icmp_ln97_25 = icmp_eq  i23 %trunc_ln97_12, i23 0" [matmul.cpp:97]   --->   Operation 443 'icmp' 'icmp_ln97_25' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_12)   --->   "%or_ln97_17 = or i1 %icmp_ln97_25, i1 %icmp_ln97_24" [matmul.cpp:97]   --->   Operation 444 'or' 'or_ln97_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 445 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_12)   --->   "%and_ln97_11 = and i1 %or_ln97_16, i1 %or_ln97_17" [matmul.cpp:97]   --->   Operation 445 'and' 'and_ln97_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 446 [1/2] (3.34ns)   --->   "%tmp_50 = fcmp_ogt  i32 %max_val_10, i32 %max_val_14" [matmul.cpp:97]   --->   Operation 446 'fcmp' 'tmp_50' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 447 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_12 = and i1 %and_ln97_11, i1 %tmp_50" [matmul.cpp:97]   --->   Operation 447 'and' 'and_ln97_12' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 448 [1/1] (0.52ns)   --->   "%max_val_15 = select i1 %and_ln97_12, i32 %max_val_10, i32 %max_val_14" [matmul.cpp:97]   --->   Operation 448 'select' 'max_val_15' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 43 <SV = 42> <Delay = 3.34>
ST_43 : Operation 449 [2/2] (3.34ns)   --->   "%tmp_53 = fcmp_ogt  i32 %max_val_11, i32 %max_val_15" [matmul.cpp:97]   --->   Operation 449 'fcmp' 'tmp_53' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 44 <SV = 43> <Delay = 4.20>
ST_44 : Operation 450 [1/1] (0.00ns)   --->   "%bitcast_ln97_13 = bitcast i32 %max_val_11" [matmul.cpp:97]   --->   Operation 450 'bitcast' 'bitcast_ln97_13' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 451 [1/1] (0.00ns)   --->   "%tmp_51 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_13, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 451 'partselect' 'tmp_51' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 452 [1/1] (0.00ns)   --->   "%trunc_ln97_13 = trunc i32 %bitcast_ln97_13" [matmul.cpp:97]   --->   Operation 452 'trunc' 'trunc_ln97_13' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 453 [1/1] (0.00ns)   --->   "%bitcast_ln97_14 = bitcast i32 %max_val_15" [matmul.cpp:97]   --->   Operation 453 'bitcast' 'bitcast_ln97_14' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 454 [1/1] (0.00ns)   --->   "%tmp_52 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_14, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 454 'partselect' 'tmp_52' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 455 [1/1] (0.00ns)   --->   "%trunc_ln97_14 = trunc i32 %bitcast_ln97_14" [matmul.cpp:97]   --->   Operation 455 'trunc' 'trunc_ln97_14' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 456 [1/1] (0.85ns)   --->   "%icmp_ln97_26 = icmp_ne  i8 %tmp_51, i8 255" [matmul.cpp:97]   --->   Operation 456 'icmp' 'icmp_ln97_26' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 457 [1/1] (0.97ns)   --->   "%icmp_ln97_27 = icmp_eq  i23 %trunc_ln97_13, i23 0" [matmul.cpp:97]   --->   Operation 457 'icmp' 'icmp_ln97_27' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 458 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_14)   --->   "%or_ln97_18 = or i1 %icmp_ln97_27, i1 %icmp_ln97_26" [matmul.cpp:97]   --->   Operation 458 'or' 'or_ln97_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 459 [1/1] (0.85ns)   --->   "%icmp_ln97_28 = icmp_ne  i8 %tmp_52, i8 255" [matmul.cpp:97]   --->   Operation 459 'icmp' 'icmp_ln97_28' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 460 [1/1] (0.97ns)   --->   "%icmp_ln97_29 = icmp_eq  i23 %trunc_ln97_14, i23 0" [matmul.cpp:97]   --->   Operation 460 'icmp' 'icmp_ln97_29' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 461 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_14)   --->   "%or_ln97_19 = or i1 %icmp_ln97_29, i1 %icmp_ln97_28" [matmul.cpp:97]   --->   Operation 461 'or' 'or_ln97_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 462 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_14)   --->   "%and_ln97_13 = and i1 %or_ln97_18, i1 %or_ln97_19" [matmul.cpp:97]   --->   Operation 462 'and' 'and_ln97_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 463 [1/2] (3.34ns)   --->   "%tmp_53 = fcmp_ogt  i32 %max_val_11, i32 %max_val_15" [matmul.cpp:97]   --->   Operation 463 'fcmp' 'tmp_53' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 464 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_14 = and i1 %and_ln97_13, i1 %tmp_53" [matmul.cpp:97]   --->   Operation 464 'and' 'and_ln97_14' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 465 [1/1] (0.00ns) (grouped into LUT with out node max_idx_3)   --->   "%select_ln97_9 = select i1 %and_ln97_14, i4 7, i4 6" [matmul.cpp:97]   --->   Operation 465 'select' 'select_ln97_9' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_44 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node max_idx_3)   --->   "%or_ln97_3 = or i1 %and_ln97_14, i1 %and_ln97_12" [matmul.cpp:97]   --->   Operation 466 'or' 'or_ln97_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_44 : Operation 467 [1/1] (0.45ns) (out node of the LUT)   --->   "%max_idx_3 = select i1 %or_ln97_3, i4 %select_ln97_9, i4 %max_idx_2" [matmul.cpp:97]   --->   Operation 467 'select' 'max_idx_3' <Predicate = true> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_44 : Operation 468 [1/1] (0.52ns)   --->   "%max_val_16 = select i1 %and_ln97_14, i32 %max_val_11, i32 %max_val_15" [matmul.cpp:97]   --->   Operation 468 'select' 'max_val_16' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 45 <SV = 44> <Delay = 3.34>
ST_45 : Operation 469 [2/2] (3.34ns)   --->   "%tmp_56 = fcmp_ogt  i32 %max_val_12, i32 %max_val_16" [matmul.cpp:97]   --->   Operation 469 'fcmp' 'tmp_56' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 46 <SV = 45> <Delay = 4.20>
ST_46 : Operation 470 [1/1] (0.00ns)   --->   "%bitcast_ln97_15 = bitcast i32 %max_val_12" [matmul.cpp:97]   --->   Operation 470 'bitcast' 'bitcast_ln97_15' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 471 [1/1] (0.00ns)   --->   "%tmp_54 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_15, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 471 'partselect' 'tmp_54' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 472 [1/1] (0.00ns)   --->   "%trunc_ln97_15 = trunc i32 %bitcast_ln97_15" [matmul.cpp:97]   --->   Operation 472 'trunc' 'trunc_ln97_15' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 473 [1/1] (0.00ns)   --->   "%bitcast_ln97_16 = bitcast i32 %max_val_16" [matmul.cpp:97]   --->   Operation 473 'bitcast' 'bitcast_ln97_16' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 474 [1/1] (0.00ns)   --->   "%tmp_55 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_16, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 474 'partselect' 'tmp_55' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 475 [1/1] (0.00ns)   --->   "%trunc_ln97_16 = trunc i32 %bitcast_ln97_16" [matmul.cpp:97]   --->   Operation 475 'trunc' 'trunc_ln97_16' <Predicate = true> <Delay = 0.00>
ST_46 : Operation 476 [1/1] (0.85ns)   --->   "%icmp_ln97_30 = icmp_ne  i8 %tmp_54, i8 255" [matmul.cpp:97]   --->   Operation 476 'icmp' 'icmp_ln97_30' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 477 [1/1] (0.97ns)   --->   "%icmp_ln97_31 = icmp_eq  i23 %trunc_ln97_15, i23 0" [matmul.cpp:97]   --->   Operation 477 'icmp' 'icmp_ln97_31' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 478 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_16)   --->   "%or_ln97_20 = or i1 %icmp_ln97_31, i1 %icmp_ln97_30" [matmul.cpp:97]   --->   Operation 478 'or' 'or_ln97_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 479 [1/1] (0.85ns)   --->   "%icmp_ln97_32 = icmp_ne  i8 %tmp_55, i8 255" [matmul.cpp:97]   --->   Operation 479 'icmp' 'icmp_ln97_32' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 480 [1/1] (0.97ns)   --->   "%icmp_ln97_33 = icmp_eq  i23 %trunc_ln97_16, i23 0" [matmul.cpp:97]   --->   Operation 480 'icmp' 'icmp_ln97_33' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 481 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_16)   --->   "%or_ln97_21 = or i1 %icmp_ln97_33, i1 %icmp_ln97_32" [matmul.cpp:97]   --->   Operation 481 'or' 'or_ln97_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 482 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_16)   --->   "%and_ln97_15 = and i1 %or_ln97_20, i1 %or_ln97_21" [matmul.cpp:97]   --->   Operation 482 'and' 'and_ln97_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 483 [1/2] (3.34ns)   --->   "%tmp_56 = fcmp_ogt  i32 %max_val_12, i32 %max_val_16" [matmul.cpp:97]   --->   Operation 483 'fcmp' 'tmp_56' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 484 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_16 = and i1 %and_ln97_15, i1 %tmp_56" [matmul.cpp:97]   --->   Operation 484 'and' 'and_ln97_16' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_46 : Operation 485 [1/1] (0.52ns)   --->   "%max_val_17 = select i1 %and_ln97_16, i32 %max_val_12, i32 %max_val_16" [matmul.cpp:97]   --->   Operation 485 'select' 'max_val_17' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 47 <SV = 46> <Delay = 3.34>
ST_47 : Operation 486 [1/1] (0.00ns)   --->   "%bitcast_ln97_17 = bitcast i32 %temp_output3_0_9_ret" [matmul.cpp:97]   --->   Operation 486 'bitcast' 'bitcast_ln97_17' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 487 [1/1] (0.00ns)   --->   "%tmp_57 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_17, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 487 'partselect' 'tmp_57' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 488 [1/1] (0.00ns)   --->   "%trunc_ln97_17 = trunc i32 %bitcast_ln97_17" [matmul.cpp:97]   --->   Operation 488 'trunc' 'trunc_ln97_17' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 489 [1/1] (0.00ns)   --->   "%bitcast_ln97_18 = bitcast i32 %max_val_17" [matmul.cpp:97]   --->   Operation 489 'bitcast' 'bitcast_ln97_18' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 490 [1/1] (0.00ns)   --->   "%tmp_58 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln97_18, i32 23, i32 30" [matmul.cpp:97]   --->   Operation 490 'partselect' 'tmp_58' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 491 [1/1] (0.00ns)   --->   "%trunc_ln97_18 = trunc i32 %bitcast_ln97_18" [matmul.cpp:97]   --->   Operation 491 'trunc' 'trunc_ln97_18' <Predicate = true> <Delay = 0.00>
ST_47 : Operation 492 [1/1] (0.85ns)   --->   "%icmp_ln97_34 = icmp_ne  i8 %tmp_57, i8 255" [matmul.cpp:97]   --->   Operation 492 'icmp' 'icmp_ln97_34' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 493 [1/1] (0.97ns)   --->   "%icmp_ln97_35 = icmp_eq  i23 %trunc_ln97_17, i23 0" [matmul.cpp:97]   --->   Operation 493 'icmp' 'icmp_ln97_35' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 494 [1/1] (0.85ns)   --->   "%icmp_ln97_36 = icmp_ne  i8 %tmp_58, i8 255" [matmul.cpp:97]   --->   Operation 494 'icmp' 'icmp_ln97_36' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 495 [1/1] (0.97ns)   --->   "%icmp_ln97_37 = icmp_eq  i23 %trunc_ln97_18, i23 0" [matmul.cpp:97]   --->   Operation 495 'icmp' 'icmp_ln97_37' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_47 : Operation 496 [2/2] (3.34ns)   --->   "%tmp_59 = fcmp_ogt  i32 %temp_output3_0_9_ret, i32 %max_val_17" [matmul.cpp:97]   --->   Operation 496 'fcmp' 'tmp_59' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 48 <SV = 47> <Delay = 5.15>
ST_48 : Operation 497 [1/1] (0.00ns) (grouped into LUT with out node max_idx_5)   --->   "%sext_ln97_2 = sext i4 %max_idx_3" [matmul.cpp:97]   --->   Operation 497 'sext' 'sext_ln97_2' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 498 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_18)   --->   "%or_ln97_22 = or i1 %icmp_ln97_35, i1 %icmp_ln97_34" [matmul.cpp:97]   --->   Operation 498 'or' 'or_ln97_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 499 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_18)   --->   "%or_ln97_23 = or i1 %icmp_ln97_37, i1 %icmp_ln97_36" [matmul.cpp:97]   --->   Operation 499 'or' 'or_ln97_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 500 [1/1] (0.00ns) (grouped into LUT with out node and_ln97_18)   --->   "%and_ln97_17 = and i1 %or_ln97_22, i1 %or_ln97_23" [matmul.cpp:97]   --->   Operation 500 'and' 'and_ln97_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 501 [1/2] (3.34ns)   --->   "%tmp_59 = fcmp_ogt  i32 %temp_output3_0_9_ret, i32 %max_val_17" [matmul.cpp:97]   --->   Operation 501 'fcmp' 'tmp_59' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 502 [1/1] (0.33ns) (out node of the LUT)   --->   "%and_ln97_18 = and i1 %and_ln97_17, i1 %tmp_59" [matmul.cpp:97]   --->   Operation 502 'and' 'and_ln97_18' <Predicate = true> <Delay = 0.33> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 503 [1/1] (0.00ns) (grouped into LUT with out node max_idx_5)   --->   "%select_ln97_13 = select i1 %and_ln97_18, i5 9, i5 8" [matmul.cpp:97]   --->   Operation 503 'select' 'select_ln97_13' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_48 : Operation 504 [1/1] (0.00ns) (grouped into LUT with out node max_idx_5)   --->   "%or_ln97_4 = or i1 %and_ln97_18, i1 %and_ln97_16" [matmul.cpp:97]   --->   Operation 504 'or' 'or_ln97_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_48 : Operation 505 [1/1] (0.48ns) (out node of the LUT)   --->   "%max_idx_5 = select i1 %or_ln97_4, i5 %select_ln97_13, i5 %sext_ln97_2" [matmul.cpp:97]   --->   Operation 505 'select' 'max_idx_5' <Predicate = true> <Delay = 0.48> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.48> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_48 : Operation 506 [1/1] (0.00ns)   --->   "%sext_ln93 = sext i5 %max_idx_5" [matmul.cpp:93]   --->   Operation 506 'sext' 'sext_ln93' <Predicate = true> <Delay = 0.00>
ST_48 : Operation 507 [1/1] (1.00ns)   --->   "%write_ln125 = write void @_ssdm_op_Write.s_axilite.i32P0A, i32 %out_r, i32 %sext_ln93" [matmul.cpp:125]   --->   Operation 507 'write' 'write_ln125' <Predicate = true> <Delay = 1.00> <CoreInst = "s_axilite">   --->   Core 122 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_48 : Operation 508 [1/1] (0.00ns)   --->   "%ret_ln126 = ret" [matmul.cpp:126]   --->   Operation 508 'ret' 'ret_ln126' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('empty_11') with incoming values : ('empty_12') [15]  (0.489 ns)

 <State 2>: 2.22ns
The critical path consists of the following:
	'phi' operation ('empty_11') with incoming values : ('empty_12') [15]  (0 ns)
	'getelementptr' operation ('temp_output_0_addr_1') [23]  (0 ns)
	'store' operation ('store_ln0') of constant 0 on array 'temp_output[0]', matmul.cpp:114 [24]  (1.35 ns)
	blocking operation 0.87 ns on control path)

 <State 3>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('temp_output_0_addr', matmul.cpp:114) [27]  (0 ns)
	'store' operation ('store_ln114', matmul.cpp:114) of constant 1 on array 'temp_output[0]', matmul.cpp:114 [28]  (1.35 ns)

 <State 4>: 1.67ns
The critical path consists of the following:
	'phi' operation ('empty_14') with incoming values : ('empty_15') [31]  (0 ns)
	'add' operation ('empty_15') [32]  (0.878 ns)
	blocking operation 0.789 ns on control path)

 <State 5>: 0ns
The critical path consists of the following:

 <State 6>: 0ns
The critical path consists of the following:

 <State 7>: 0ns
The critical path consists of the following:

 <State 8>: 0.79ns
The critical path consists of the following:
	'getelementptr' operation ('temp_output2_0_addr', matmul.cpp:115) [43]  (0 ns)
	'store' operation ('store_ln115', matmul.cpp:115) of constant 1 on array 'temp_output2[0]', matmul.cpp:115 [44]  (0.79 ns)

 <State 9>: 0ns
The critical path consists of the following:

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [48]  (0.79 ns)

 <State 12>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [48]  (0.79 ns)

 <State 13>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load_2', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [72]  (0.79 ns)

 <State 14>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load_4', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [96]  (0.79 ns)

 <State 15>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load_6', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [120]  (0.79 ns)

 <State 16>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load_8', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [144]  (0.79 ns)

 <State 17>: 0.79ns
The critical path consists of the following:
	'load' operation ('temp_output2_0_load_10', matmul.cpp:80->matmul.cpp:122) on array 'temp_output2[0]', matmul.cpp:115 [168]  (0.79 ns)

 <State 18>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1', matmul.cpp:80->matmul.cpp:122) [55]  (3.35 ns)

 <State 19>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_1', matmul.cpp:80->matmul.cpp:122) [55]  (3.35 ns)
	'and' operation ('and_ln80', matmul.cpp:80->matmul.cpp:122) [56]  (0 ns)
	'select' operation ('select_ln80', matmul.cpp:80->matmul.cpp:122) [57]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [58]  (0.79 ns)

 <State 20>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_5', matmul.cpp:80->matmul.cpp:122) [79]  (3.35 ns)
	'and' operation ('and_ln80_2', matmul.cpp:80->matmul.cpp:122) [80]  (0 ns)
	'select' operation ('select_ln80_2', matmul.cpp:80->matmul.cpp:122) [81]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_2', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [82]  (0.79 ns)

 <State 21>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_9', matmul.cpp:80->matmul.cpp:122) [103]  (3.35 ns)
	'and' operation ('and_ln80_4', matmul.cpp:80->matmul.cpp:122) [104]  (0 ns)
	'select' operation ('select_ln80_4', matmul.cpp:80->matmul.cpp:122) [105]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_4', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [106]  (0.79 ns)

 <State 22>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_12', matmul.cpp:80->matmul.cpp:122) [127]  (3.35 ns)
	'and' operation ('and_ln80_6', matmul.cpp:80->matmul.cpp:122) [128]  (0 ns)
	'select' operation ('select_ln80_6', matmul.cpp:80->matmul.cpp:122) [129]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_6', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [130]  (0.79 ns)

 <State 23>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_16', matmul.cpp:80->matmul.cpp:122) [151]  (3.35 ns)
	'and' operation ('and_ln80_8', matmul.cpp:80->matmul.cpp:122) [152]  (0 ns)
	'select' operation ('select_ln80_8', matmul.cpp:80->matmul.cpp:122) [153]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_8', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [154]  (0.79 ns)

 <State 24>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_20', matmul.cpp:80->matmul.cpp:122) [175]  (3.35 ns)
	'and' operation ('and_ln80_10', matmul.cpp:80->matmul.cpp:122) [176]  (0 ns)
	'select' operation ('select_ln80_10', matmul.cpp:80->matmul.cpp:122) [177]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_10', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [178]  (0.79 ns)

 <State 25>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_24', matmul.cpp:80->matmul.cpp:122) [199]  (3.35 ns)
	'and' operation ('and_ln80_12', matmul.cpp:80->matmul.cpp:122) [200]  (0 ns)
	'select' operation ('select_ln80_12', matmul.cpp:80->matmul.cpp:122) [201]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_12', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [202]  (0.79 ns)

 <State 26>: 4.66ns
The critical path consists of the following:
	'fcmp' operation ('tmp_28', matmul.cpp:80->matmul.cpp:122) [223]  (3.35 ns)
	'and' operation ('and_ln80_14', matmul.cpp:80->matmul.cpp:122) [224]  (0 ns)
	'select' operation ('select_ln80_14', matmul.cpp:80->matmul.cpp:122) [225]  (0.525 ns)
	'store' operation ('store_ln81', matmul.cpp:81->matmul.cpp:122) of variable 'select_ln80_14', matmul.cpp:80->matmul.cpp:122 on array 'temp_output2[0]', matmul.cpp:115 [226]  (0.79 ns)

 <State 27>: 0ns
The critical path consists of the following:

 <State 28>: 6.02ns
The critical path consists of the following:
	'call' operation ('l3_mm_ret', matmul.cpp:123) to 'l3_mm' [239]  (6.02 ns)

 <State 29>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_32', matmul.cpp:97) [256]  (3.35 ns)

 <State 30>: 3.68ns
The critical path consists of the following:
	'fcmp' operation ('tmp_32', matmul.cpp:97) [256]  (3.35 ns)
	'and' operation ('and_ln97', matmul.cpp:97) [257]  (0.331 ns)

 <State 31>: 3.87ns
The critical path consists of the following:
	'select' operation ('max_val', matmul.cpp:97) [258]  (0.525 ns)
	'fcmp' operation ('tmp_35', matmul.cpp:97) [272]  (3.35 ns)

 <State 32>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_35', matmul.cpp:97) [272]  (3.35 ns)
	'and' operation ('and_ln97_2', matmul.cpp:97) [273]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [278]  (0.525 ns)

 <State 33>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_38', matmul.cpp:97) [292]  (3.35 ns)

 <State 34>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_38', matmul.cpp:97) [292]  (3.35 ns)
	'and' operation ('and_ln97_4', matmul.cpp:97) [293]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [294]  (0.525 ns)

 <State 35>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_41', matmul.cpp:97) [308]  (3.35 ns)

 <State 36>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_41', matmul.cpp:97) [308]  (3.35 ns)
	'and' operation ('and_ln97_6', matmul.cpp:97) [309]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [314]  (0.525 ns)

 <State 37>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_44', matmul.cpp:97) [328]  (3.35 ns)

 <State 38>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_44', matmul.cpp:97) [328]  (3.35 ns)
	'and' operation ('and_ln97_8', matmul.cpp:97) [329]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [330]  (0.525 ns)

 <State 39>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_47', matmul.cpp:97) [344]  (3.35 ns)

 <State 40>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_47', matmul.cpp:97) [344]  (3.35 ns)
	'and' operation ('and_ln97_10', matmul.cpp:97) [345]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [349]  (0.525 ns)

 <State 41>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_50', matmul.cpp:97) [363]  (3.35 ns)

 <State 42>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_50', matmul.cpp:97) [363]  (3.35 ns)
	'and' operation ('and_ln97_12', matmul.cpp:97) [364]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [365]  (0.525 ns)

 <State 43>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_53', matmul.cpp:97) [379]  (3.35 ns)

 <State 44>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_53', matmul.cpp:97) [379]  (3.35 ns)
	'and' operation ('and_ln97_14', matmul.cpp:97) [380]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [385]  (0.525 ns)

 <State 45>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_56', matmul.cpp:97) [399]  (3.35 ns)

 <State 46>: 4.2ns
The critical path consists of the following:
	'fcmp' operation ('tmp_56', matmul.cpp:97) [399]  (3.35 ns)
	'and' operation ('and_ln97_16', matmul.cpp:97) [400]  (0.331 ns)
	'select' operation ('max_val', matmul.cpp:97) [401]  (0.525 ns)

 <State 47>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_59', matmul.cpp:97) [415]  (3.35 ns)

 <State 48>: 5.16ns
The critical path consists of the following:
	'fcmp' operation ('tmp_59', matmul.cpp:97) [415]  (3.35 ns)
	'and' operation ('and_ln97_18', matmul.cpp:97) [416]  (0.331 ns)
	'select' operation ('select_ln97_13', matmul.cpp:97) [417]  (0 ns)
	'select' operation ('max_idx', matmul.cpp:97) [419]  (0.48 ns)
	s_axi write on port 'out_r' (matmul.cpp:125) [421]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45
	State 46
	State 47
	State 48


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
