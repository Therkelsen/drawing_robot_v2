

================================================================
== Vitis HLS Report for 'l1_relu'
================================================================
* Date:           Tue Nov 26 10:05:10 2024

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        neural_network_hls
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  5.225 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       31|       31|  0.310 us|  0.310 us|   31|   31|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 32
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%output_0_addr = getelementptr i32 %output_0, i64 0, i64 0" [matmul.cpp:65]   --->   Operation 33 'getelementptr' 'output_0_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [2/2] (1.35ns)   --->   "%output_0_load = load i5 %output_0_addr" [matmul.cpp:65]   --->   Operation 34 'load' 'output_0_load' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%output_0_addr_1 = getelementptr i32 %output_0, i64 0, i64 1" [matmul.cpp:65]   --->   Operation 35 'getelementptr' 'output_0_addr_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [2/2] (1.35ns)   --->   "%output_0_load_1 = load i5 %output_0_addr_1" [matmul.cpp:65]   --->   Operation 36 'load' 'output_0_load_1' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 2 <SV = 1> <Delay = 1.35>
ST_2 : Operation 37 [1/2] (1.35ns)   --->   "%output_0_load = load i5 %output_0_addr" [matmul.cpp:65]   --->   Operation 37 'load' 'output_0_load' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 38 [1/2] (1.35ns)   --->   "%output_0_load_1 = load i5 %output_0_addr_1" [matmul.cpp:65]   --->   Operation 38 'load' 'output_0_load_1' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%output_0_addr_2 = getelementptr i32 %output_0, i64 0, i64 2" [matmul.cpp:65]   --->   Operation 39 'getelementptr' 'output_0_addr_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 40 [2/2] (1.35ns)   --->   "%output_0_load_2 = load i5 %output_0_addr_2" [matmul.cpp:65]   --->   Operation 40 'load' 'output_0_load_2' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 41 [1/1] (0.00ns)   --->   "%output_0_addr_3 = getelementptr i32 %output_0, i64 0, i64 3" [matmul.cpp:65]   --->   Operation 41 'getelementptr' 'output_0_addr_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 42 [2/2] (1.35ns)   --->   "%output_0_load_3 = load i5 %output_0_addr_3" [matmul.cpp:65]   --->   Operation 42 'load' 'output_0_load_3' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 3 <SV = 2> <Delay = 1.35>
ST_3 : Operation 43 [1/2] (1.35ns)   --->   "%output_0_load_2 = load i5 %output_0_addr_2" [matmul.cpp:65]   --->   Operation 43 'load' 'output_0_load_2' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 44 [1/2] (1.35ns)   --->   "%output_0_load_3 = load i5 %output_0_addr_3" [matmul.cpp:65]   --->   Operation 44 'load' 'output_0_load_3' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%output_0_addr_4 = getelementptr i32 %output_0, i64 0, i64 4" [matmul.cpp:65]   --->   Operation 45 'getelementptr' 'output_0_addr_4' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [2/2] (1.35ns)   --->   "%output_0_load_4 = load i5 %output_0_addr_4" [matmul.cpp:65]   --->   Operation 46 'load' 'output_0_load_4' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%output_0_addr_5 = getelementptr i32 %output_0, i64 0, i64 5" [matmul.cpp:65]   --->   Operation 47 'getelementptr' 'output_0_addr_5' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 48 [2/2] (1.35ns)   --->   "%output_0_load_5 = load i5 %output_0_addr_5" [matmul.cpp:65]   --->   Operation 48 'load' 'output_0_load_5' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 4 <SV = 3> <Delay = 1.35>
ST_4 : Operation 49 [1/2] (1.35ns)   --->   "%output_0_load_4 = load i5 %output_0_addr_4" [matmul.cpp:65]   --->   Operation 49 'load' 'output_0_load_4' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 50 [1/2] (1.35ns)   --->   "%output_0_load_5 = load i5 %output_0_addr_5" [matmul.cpp:65]   --->   Operation 50 'load' 'output_0_load_5' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%output_0_addr_6 = getelementptr i32 %output_0, i64 0, i64 6" [matmul.cpp:65]   --->   Operation 51 'getelementptr' 'output_0_addr_6' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [2/2] (1.35ns)   --->   "%output_0_load_6 = load i5 %output_0_addr_6" [matmul.cpp:65]   --->   Operation 52 'load' 'output_0_load_6' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%output_0_addr_7 = getelementptr i32 %output_0, i64 0, i64 7" [matmul.cpp:65]   --->   Operation 53 'getelementptr' 'output_0_addr_7' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [2/2] (1.35ns)   --->   "%output_0_load_7 = load i5 %output_0_addr_7" [matmul.cpp:65]   --->   Operation 54 'load' 'output_0_load_7' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 5 <SV = 4> <Delay = 1.35>
ST_5 : Operation 55 [1/2] (1.35ns)   --->   "%output_0_load_6 = load i5 %output_0_addr_6" [matmul.cpp:65]   --->   Operation 55 'load' 'output_0_load_6' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 56 [1/2] (1.35ns)   --->   "%output_0_load_7 = load i5 %output_0_addr_7" [matmul.cpp:65]   --->   Operation 56 'load' 'output_0_load_7' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 57 [1/1] (0.00ns)   --->   "%output_0_addr_8 = getelementptr i32 %output_0, i64 0, i64 8" [matmul.cpp:65]   --->   Operation 57 'getelementptr' 'output_0_addr_8' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 58 [2/2] (1.35ns)   --->   "%output_0_load_8 = load i5 %output_0_addr_8" [matmul.cpp:65]   --->   Operation 58 'load' 'output_0_load_8' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 59 [1/1] (0.00ns)   --->   "%output_0_addr_9 = getelementptr i32 %output_0, i64 0, i64 9" [matmul.cpp:65]   --->   Operation 59 'getelementptr' 'output_0_addr_9' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 60 [2/2] (1.35ns)   --->   "%output_0_load_9 = load i5 %output_0_addr_9" [matmul.cpp:65]   --->   Operation 60 'load' 'output_0_load_9' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 6 <SV = 5> <Delay = 1.35>
ST_6 : Operation 61 [1/2] (1.35ns)   --->   "%output_0_load_8 = load i5 %output_0_addr_8" [matmul.cpp:65]   --->   Operation 61 'load' 'output_0_load_8' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_6 : Operation 62 [1/2] (1.35ns)   --->   "%output_0_load_9 = load i5 %output_0_addr_9" [matmul.cpp:65]   --->   Operation 62 'load' 'output_0_load_9' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%output_0_addr_10 = getelementptr i32 %output_0, i64 0, i64 10" [matmul.cpp:65]   --->   Operation 63 'getelementptr' 'output_0_addr_10' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 64 [2/2] (1.35ns)   --->   "%output_0_load_10 = load i5 %output_0_addr_10" [matmul.cpp:65]   --->   Operation 64 'load' 'output_0_load_10' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%output_0_addr_11 = getelementptr i32 %output_0, i64 0, i64 11" [matmul.cpp:65]   --->   Operation 65 'getelementptr' 'output_0_addr_11' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 66 [2/2] (1.35ns)   --->   "%output_0_load_11 = load i5 %output_0_addr_11" [matmul.cpp:65]   --->   Operation 66 'load' 'output_0_load_11' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 7 <SV = 6> <Delay = 1.35>
ST_7 : Operation 67 [1/2] (1.35ns)   --->   "%output_0_load_10 = load i5 %output_0_addr_10" [matmul.cpp:65]   --->   Operation 67 'load' 'output_0_load_10' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_7 : Operation 68 [1/2] (1.35ns)   --->   "%output_0_load_11 = load i5 %output_0_addr_11" [matmul.cpp:65]   --->   Operation 68 'load' 'output_0_load_11' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_7 : Operation 69 [1/1] (0.00ns)   --->   "%output_0_addr_12 = getelementptr i32 %output_0, i64 0, i64 12" [matmul.cpp:65]   --->   Operation 69 'getelementptr' 'output_0_addr_12' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 70 [2/2] (1.35ns)   --->   "%output_0_load_12 = load i5 %output_0_addr_12" [matmul.cpp:65]   --->   Operation 70 'load' 'output_0_load_12' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_7 : Operation 71 [1/1] (0.00ns)   --->   "%output_0_addr_13 = getelementptr i32 %output_0, i64 0, i64 13" [matmul.cpp:65]   --->   Operation 71 'getelementptr' 'output_0_addr_13' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 72 [2/2] (1.35ns)   --->   "%output_0_load_13 = load i5 %output_0_addr_13" [matmul.cpp:65]   --->   Operation 72 'load' 'output_0_load_13' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 8 <SV = 7> <Delay = 1.35>
ST_8 : Operation 73 [1/2] (1.35ns)   --->   "%output_0_load_12 = load i5 %output_0_addr_12" [matmul.cpp:65]   --->   Operation 73 'load' 'output_0_load_12' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 74 [1/2] (1.35ns)   --->   "%output_0_load_13 = load i5 %output_0_addr_13" [matmul.cpp:65]   --->   Operation 74 'load' 'output_0_load_13' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 75 [1/1] (0.00ns)   --->   "%output_0_addr_14 = getelementptr i32 %output_0, i64 0, i64 14" [matmul.cpp:65]   --->   Operation 75 'getelementptr' 'output_0_addr_14' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 76 [2/2] (1.35ns)   --->   "%output_0_load_14 = load i5 %output_0_addr_14" [matmul.cpp:65]   --->   Operation 76 'load' 'output_0_load_14' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_8 : Operation 77 [1/1] (0.00ns)   --->   "%output_0_addr_15 = getelementptr i32 %output_0, i64 0, i64 15" [matmul.cpp:65]   --->   Operation 77 'getelementptr' 'output_0_addr_15' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 78 [2/2] (1.35ns)   --->   "%output_0_load_15 = load i5 %output_0_addr_15" [matmul.cpp:65]   --->   Operation 78 'load' 'output_0_load_15' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 9 <SV = 8> <Delay = 1.35>
ST_9 : Operation 79 [1/2] (1.35ns)   --->   "%output_0_load_14 = load i5 %output_0_addr_14" [matmul.cpp:65]   --->   Operation 79 'load' 'output_0_load_14' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 80 [1/2] (1.35ns)   --->   "%output_0_load_15 = load i5 %output_0_addr_15" [matmul.cpp:65]   --->   Operation 80 'load' 'output_0_load_15' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 81 [1/1] (0.00ns)   --->   "%output_0_addr_16 = getelementptr i32 %output_0, i64 0, i64 16" [matmul.cpp:65]   --->   Operation 81 'getelementptr' 'output_0_addr_16' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [2/2] (1.35ns)   --->   "%output_0_load_16 = load i5 %output_0_addr_16" [matmul.cpp:65]   --->   Operation 82 'load' 'output_0_load_16' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%output_0_addr_17 = getelementptr i32 %output_0, i64 0, i64 17" [matmul.cpp:65]   --->   Operation 83 'getelementptr' 'output_0_addr_17' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [2/2] (1.35ns)   --->   "%output_0_load_17 = load i5 %output_0_addr_17" [matmul.cpp:65]   --->   Operation 84 'load' 'output_0_load_17' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 10 <SV = 9> <Delay = 1.35>
ST_10 : Operation 85 [1/2] (1.35ns)   --->   "%output_0_load_16 = load i5 %output_0_addr_16" [matmul.cpp:65]   --->   Operation 85 'load' 'output_0_load_16' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_10 : Operation 86 [1/2] (1.35ns)   --->   "%output_0_load_17 = load i5 %output_0_addr_17" [matmul.cpp:65]   --->   Operation 86 'load' 'output_0_load_17' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_10 : Operation 87 [1/1] (0.00ns)   --->   "%output_0_addr_18 = getelementptr i32 %output_0, i64 0, i64 18" [matmul.cpp:65]   --->   Operation 87 'getelementptr' 'output_0_addr_18' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 88 [2/2] (1.35ns)   --->   "%output_0_load_18 = load i5 %output_0_addr_18" [matmul.cpp:65]   --->   Operation 88 'load' 'output_0_load_18' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_10 : Operation 89 [1/1] (0.00ns)   --->   "%output_0_addr_19 = getelementptr i32 %output_0, i64 0, i64 19" [matmul.cpp:65]   --->   Operation 89 'getelementptr' 'output_0_addr_19' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 90 [2/2] (1.35ns)   --->   "%output_0_load_19 = load i5 %output_0_addr_19" [matmul.cpp:65]   --->   Operation 90 'load' 'output_0_load_19' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 11 <SV = 10> <Delay = 1.35>
ST_11 : Operation 91 [1/2] (1.35ns)   --->   "%output_0_load_18 = load i5 %output_0_addr_18" [matmul.cpp:65]   --->   Operation 91 'load' 'output_0_load_18' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_11 : Operation 92 [1/2] (1.35ns)   --->   "%output_0_load_19 = load i5 %output_0_addr_19" [matmul.cpp:65]   --->   Operation 92 'load' 'output_0_load_19' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_11 : Operation 93 [1/1] (0.00ns)   --->   "%output_0_addr_20 = getelementptr i32 %output_0, i64 0, i64 20" [matmul.cpp:65]   --->   Operation 93 'getelementptr' 'output_0_addr_20' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 94 [2/2] (1.35ns)   --->   "%output_0_load_20 = load i5 %output_0_addr_20" [matmul.cpp:65]   --->   Operation 94 'load' 'output_0_load_20' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_11 : Operation 95 [1/1] (0.00ns)   --->   "%output_0_addr_21 = getelementptr i32 %output_0, i64 0, i64 21" [matmul.cpp:65]   --->   Operation 95 'getelementptr' 'output_0_addr_21' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 96 [2/2] (1.35ns)   --->   "%output_0_load_21 = load i5 %output_0_addr_21" [matmul.cpp:65]   --->   Operation 96 'load' 'output_0_load_21' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 12 <SV = 11> <Delay = 1.35>
ST_12 : Operation 97 [1/2] (1.35ns)   --->   "%output_0_load_20 = load i5 %output_0_addr_20" [matmul.cpp:65]   --->   Operation 97 'load' 'output_0_load_20' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_12 : Operation 98 [1/2] (1.35ns)   --->   "%output_0_load_21 = load i5 %output_0_addr_21" [matmul.cpp:65]   --->   Operation 98 'load' 'output_0_load_21' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_12 : Operation 99 [1/1] (0.00ns)   --->   "%output_0_addr_22 = getelementptr i32 %output_0, i64 0, i64 22" [matmul.cpp:65]   --->   Operation 99 'getelementptr' 'output_0_addr_22' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 100 [2/2] (1.35ns)   --->   "%output_0_load_22 = load i5 %output_0_addr_22" [matmul.cpp:65]   --->   Operation 100 'load' 'output_0_load_22' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_12 : Operation 101 [1/1] (0.00ns)   --->   "%output_0_addr_23 = getelementptr i32 %output_0, i64 0, i64 23" [matmul.cpp:65]   --->   Operation 101 'getelementptr' 'output_0_addr_23' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 102 [2/2] (1.35ns)   --->   "%output_0_load_23 = load i5 %output_0_addr_23" [matmul.cpp:65]   --->   Operation 102 'load' 'output_0_load_23' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 13 <SV = 12> <Delay = 1.35>
ST_13 : Operation 103 [1/2] (1.35ns)   --->   "%output_0_load_22 = load i5 %output_0_addr_22" [matmul.cpp:65]   --->   Operation 103 'load' 'output_0_load_22' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_13 : Operation 104 [1/2] (1.35ns)   --->   "%output_0_load_23 = load i5 %output_0_addr_23" [matmul.cpp:65]   --->   Operation 104 'load' 'output_0_load_23' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_13 : Operation 105 [1/1] (0.00ns)   --->   "%output_0_addr_24 = getelementptr i32 %output_0, i64 0, i64 24" [matmul.cpp:65]   --->   Operation 105 'getelementptr' 'output_0_addr_24' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 106 [2/2] (1.35ns)   --->   "%output_0_load_24 = load i5 %output_0_addr_24" [matmul.cpp:65]   --->   Operation 106 'load' 'output_0_load_24' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_13 : Operation 107 [1/1] (0.00ns)   --->   "%output_0_addr_25 = getelementptr i32 %output_0, i64 0, i64 25" [matmul.cpp:65]   --->   Operation 107 'getelementptr' 'output_0_addr_25' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 108 [2/2] (1.35ns)   --->   "%output_0_load_25 = load i5 %output_0_addr_25" [matmul.cpp:65]   --->   Operation 108 'load' 'output_0_load_25' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 14 <SV = 13> <Delay = 1.35>
ST_14 : Operation 109 [1/2] (1.35ns)   --->   "%output_0_load_24 = load i5 %output_0_addr_24" [matmul.cpp:65]   --->   Operation 109 'load' 'output_0_load_24' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_14 : Operation 110 [1/2] (1.35ns)   --->   "%output_0_load_25 = load i5 %output_0_addr_25" [matmul.cpp:65]   --->   Operation 110 'load' 'output_0_load_25' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_14 : Operation 111 [1/1] (0.00ns)   --->   "%output_0_addr_26 = getelementptr i32 %output_0, i64 0, i64 26" [matmul.cpp:65]   --->   Operation 111 'getelementptr' 'output_0_addr_26' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 112 [2/2] (1.35ns)   --->   "%output_0_load_26 = load i5 %output_0_addr_26" [matmul.cpp:65]   --->   Operation 112 'load' 'output_0_load_26' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_14 : Operation 113 [1/1] (0.00ns)   --->   "%output_0_addr_27 = getelementptr i32 %output_0, i64 0, i64 27" [matmul.cpp:65]   --->   Operation 113 'getelementptr' 'output_0_addr_27' <Predicate = true> <Delay = 0.00>
ST_14 : Operation 114 [2/2] (1.35ns)   --->   "%output_0_load_27 = load i5 %output_0_addr_27" [matmul.cpp:65]   --->   Operation 114 'load' 'output_0_load_27' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 15 <SV = 14> <Delay = 1.35>
ST_15 : Operation 115 [1/2] (1.35ns)   --->   "%output_0_load_26 = load i5 %output_0_addr_26" [matmul.cpp:65]   --->   Operation 115 'load' 'output_0_load_26' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_15 : Operation 116 [1/2] (1.35ns)   --->   "%output_0_load_27 = load i5 %output_0_addr_27" [matmul.cpp:65]   --->   Operation 116 'load' 'output_0_load_27' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_15 : Operation 117 [1/1] (0.00ns)   --->   "%output_0_addr_28 = getelementptr i32 %output_0, i64 0, i64 28" [matmul.cpp:65]   --->   Operation 117 'getelementptr' 'output_0_addr_28' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 118 [2/2] (1.35ns)   --->   "%output_0_load_28 = load i5 %output_0_addr_28" [matmul.cpp:65]   --->   Operation 118 'load' 'output_0_load_28' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_15 : Operation 119 [1/1] (0.00ns)   --->   "%output_0_addr_29 = getelementptr i32 %output_0, i64 0, i64 29" [matmul.cpp:65]   --->   Operation 119 'getelementptr' 'output_0_addr_29' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 120 [2/2] (1.35ns)   --->   "%output_0_load_29 = load i5 %output_0_addr_29" [matmul.cpp:65]   --->   Operation 120 'load' 'output_0_load_29' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 16 <SV = 15> <Delay = 3.34>
ST_16 : Operation 121 [2/2] (3.34ns)   --->   "%tmp_s = fcmp_olt  i32 %output_0_load, i32 0" [matmul.cpp:65]   --->   Operation 121 'fcmp' 'tmp_s' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 122 [2/2] (3.34ns)   --->   "%tmp_61 = fcmp_olt  i32 %output_0_load_1, i32 0" [matmul.cpp:65]   --->   Operation 122 'fcmp' 'tmp_61' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_16 : Operation 123 [1/2] (1.35ns)   --->   "%output_0_load_28 = load i5 %output_0_addr_28" [matmul.cpp:65]   --->   Operation 123 'load' 'output_0_load_28' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_16 : Operation 124 [1/2] (1.35ns)   --->   "%output_0_load_29 = load i5 %output_0_addr_29" [matmul.cpp:65]   --->   Operation 124 'load' 'output_0_load_29' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_16 : Operation 125 [1/1] (0.00ns)   --->   "%output_0_addr_30 = getelementptr i32 %output_0, i64 0, i64 30" [matmul.cpp:65]   --->   Operation 125 'getelementptr' 'output_0_addr_30' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 126 [2/2] (1.35ns)   --->   "%output_0_load_30 = load i5 %output_0_addr_30" [matmul.cpp:65]   --->   Operation 126 'load' 'output_0_load_30' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_16 : Operation 127 [1/1] (0.00ns)   --->   "%output_0_addr_31 = getelementptr i32 %output_0, i64 0, i64 31" [matmul.cpp:65]   --->   Operation 127 'getelementptr' 'output_0_addr_31' <Predicate = true> <Delay = 0.00>
ST_16 : Operation 128 [2/2] (1.35ns)   --->   "%output_0_load_31 = load i5 %output_0_addr_31" [matmul.cpp:65]   --->   Operation 128 'load' 'output_0_load_31' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 17 <SV = 16> <Delay = 5.22>
ST_17 : Operation 129 [1/1] (0.00ns)   --->   "%bitcast_ln65 = bitcast i32 %output_0_load" [matmul.cpp:65]   --->   Operation 129 'bitcast' 'bitcast_ln65' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 130 [1/1] (0.00ns)   --->   "%tmp = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 130 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 131 [1/1] (0.00ns)   --->   "%trunc_ln65 = trunc i32 %bitcast_ln65" [matmul.cpp:65]   --->   Operation 131 'trunc' 'trunc_ln65' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 132 [1/1] (0.85ns)   --->   "%icmp_ln65 = icmp_ne  i8 %tmp, i8 255" [matmul.cpp:65]   --->   Operation 132 'icmp' 'icmp_ln65' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 133 [1/1] (0.97ns)   --->   "%icmp_ln65_1 = icmp_eq  i23 %trunc_ln65, i23 0" [matmul.cpp:65]   --->   Operation 133 'icmp' 'icmp_ln65_1' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%or_ln65 = or i1 %icmp_ln65_1, i1 %icmp_ln65" [matmul.cpp:65]   --->   Operation 134 'or' 'or_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 135 [1/2] (3.34ns)   --->   "%tmp_s = fcmp_olt  i32 %output_0_load, i32 0" [matmul.cpp:65]   --->   Operation 135 'fcmp' 'tmp_s' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node select_ln65)   --->   "%and_ln65 = and i1 %or_ln65, i1 %tmp_s" [matmul.cpp:65]   --->   Operation 136 'and' 'and_ln65' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 137 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65 = select i1 %and_ln65, i32 0, i32 %output_0_load" [matmul.cpp:65]   --->   Operation 137 'select' 'select_ln65' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 138 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65, i5 %output_0_addr" [matmul.cpp:66]   --->   Operation 138 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_17 : Operation 139 [1/1] (0.00ns)   --->   "%bitcast_ln65_1 = bitcast i32 %output_0_load_1" [matmul.cpp:65]   --->   Operation 139 'bitcast' 'bitcast_ln65_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_60 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_1, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 140 'partselect' 'tmp_60' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 141 [1/1] (0.00ns)   --->   "%trunc_ln65_1 = trunc i32 %bitcast_ln65_1" [matmul.cpp:65]   --->   Operation 141 'trunc' 'trunc_ln65_1' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 142 [1/1] (0.85ns)   --->   "%icmp_ln65_2 = icmp_ne  i8 %tmp_60, i8 255" [matmul.cpp:65]   --->   Operation 142 'icmp' 'icmp_ln65_2' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 143 [1/1] (0.97ns)   --->   "%icmp_ln65_3 = icmp_eq  i23 %trunc_ln65_1, i23 0" [matmul.cpp:65]   --->   Operation 143 'icmp' 'icmp_ln65_3' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_1)   --->   "%or_ln65_1 = or i1 %icmp_ln65_3, i1 %icmp_ln65_2" [matmul.cpp:65]   --->   Operation 144 'or' 'or_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 145 [1/2] (3.34ns)   --->   "%tmp_61 = fcmp_olt  i32 %output_0_load_1, i32 0" [matmul.cpp:65]   --->   Operation 145 'fcmp' 'tmp_61' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_1)   --->   "%and_ln65_1 = and i1 %or_ln65_1, i1 %tmp_61" [matmul.cpp:65]   --->   Operation 146 'and' 'and_ln65_1' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 147 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_1 = select i1 %and_ln65_1, i32 0, i32 %output_0_load_1" [matmul.cpp:65]   --->   Operation 147 'select' 'select_ln65_1' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_17 : Operation 148 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_1, i5 %output_0_addr_1" [matmul.cpp:66]   --->   Operation 148 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_17 : Operation 149 [2/2] (3.34ns)   --->   "%tmp_63 = fcmp_olt  i32 %output_0_load_2, i32 0" [matmul.cpp:65]   --->   Operation 149 'fcmp' 'tmp_63' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 150 [2/2] (3.34ns)   --->   "%tmp_65 = fcmp_olt  i32 %output_0_load_3, i32 0" [matmul.cpp:65]   --->   Operation 150 'fcmp' 'tmp_65' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 151 [1/2] (1.35ns)   --->   "%output_0_load_30 = load i5 %output_0_addr_30" [matmul.cpp:65]   --->   Operation 151 'load' 'output_0_load_30' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_17 : Operation 152 [1/2] (1.35ns)   --->   "%output_0_load_31 = load i5 %output_0_addr_31" [matmul.cpp:65]   --->   Operation 152 'load' 'output_0_load_31' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 18 <SV = 17> <Delay = 5.22>
ST_18 : Operation 153 [1/1] (0.00ns)   --->   "%bitcast_ln65_2 = bitcast i32 %output_0_load_2" [matmul.cpp:65]   --->   Operation 153 'bitcast' 'bitcast_ln65_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_62 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_2, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 154 'partselect' 'tmp_62' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 155 [1/1] (0.00ns)   --->   "%trunc_ln65_2 = trunc i32 %bitcast_ln65_2" [matmul.cpp:65]   --->   Operation 155 'trunc' 'trunc_ln65_2' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 156 [1/1] (0.85ns)   --->   "%icmp_ln65_4 = icmp_ne  i8 %tmp_62, i8 255" [matmul.cpp:65]   --->   Operation 156 'icmp' 'icmp_ln65_4' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 157 [1/1] (0.97ns)   --->   "%icmp_ln65_5 = icmp_eq  i23 %trunc_ln65_2, i23 0" [matmul.cpp:65]   --->   Operation 157 'icmp' 'icmp_ln65_5' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_2)   --->   "%or_ln65_2 = or i1 %icmp_ln65_5, i1 %icmp_ln65_4" [matmul.cpp:65]   --->   Operation 158 'or' 'or_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 159 [1/2] (3.34ns)   --->   "%tmp_63 = fcmp_olt  i32 %output_0_load_2, i32 0" [matmul.cpp:65]   --->   Operation 159 'fcmp' 'tmp_63' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_2)   --->   "%and_ln65_2 = and i1 %or_ln65_2, i1 %tmp_63" [matmul.cpp:65]   --->   Operation 160 'and' 'and_ln65_2' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 161 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_2 = select i1 %and_ln65_2, i32 0, i32 %output_0_load_2" [matmul.cpp:65]   --->   Operation 161 'select' 'select_ln65_2' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 162 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_2, i5 %output_0_addr_2" [matmul.cpp:66]   --->   Operation 162 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_18 : Operation 163 [1/1] (0.00ns)   --->   "%bitcast_ln65_3 = bitcast i32 %output_0_load_3" [matmul.cpp:65]   --->   Operation 163 'bitcast' 'bitcast_ln65_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 164 [1/1] (0.00ns)   --->   "%tmp_64 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_3, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 164 'partselect' 'tmp_64' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 165 [1/1] (0.00ns)   --->   "%trunc_ln65_3 = trunc i32 %bitcast_ln65_3" [matmul.cpp:65]   --->   Operation 165 'trunc' 'trunc_ln65_3' <Predicate = true> <Delay = 0.00>
ST_18 : Operation 166 [1/1] (0.85ns)   --->   "%icmp_ln65_6 = icmp_ne  i8 %tmp_64, i8 255" [matmul.cpp:65]   --->   Operation 166 'icmp' 'icmp_ln65_6' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 167 [1/1] (0.97ns)   --->   "%icmp_ln65_7 = icmp_eq  i23 %trunc_ln65_3, i23 0" [matmul.cpp:65]   --->   Operation 167 'icmp' 'icmp_ln65_7' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_3)   --->   "%or_ln65_3 = or i1 %icmp_ln65_7, i1 %icmp_ln65_6" [matmul.cpp:65]   --->   Operation 168 'or' 'or_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 169 [1/2] (3.34ns)   --->   "%tmp_65 = fcmp_olt  i32 %output_0_load_3, i32 0" [matmul.cpp:65]   --->   Operation 169 'fcmp' 'tmp_65' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 170 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_3)   --->   "%and_ln65_3 = and i1 %or_ln65_3, i1 %tmp_65" [matmul.cpp:65]   --->   Operation 170 'and' 'and_ln65_3' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 171 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_3 = select i1 %and_ln65_3, i32 0, i32 %output_0_load_3" [matmul.cpp:65]   --->   Operation 171 'select' 'select_ln65_3' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 172 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_3, i5 %output_0_addr_3" [matmul.cpp:66]   --->   Operation 172 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_18 : Operation 173 [2/2] (3.34ns)   --->   "%tmp_67 = fcmp_olt  i32 %output_0_load_4, i32 0" [matmul.cpp:65]   --->   Operation 173 'fcmp' 'tmp_67' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 174 [2/2] (3.34ns)   --->   "%tmp_69 = fcmp_olt  i32 %output_0_load_5, i32 0" [matmul.cpp:65]   --->   Operation 174 'fcmp' 'tmp_69' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 18> <Delay = 5.22>
ST_19 : Operation 175 [1/1] (0.00ns)   --->   "%bitcast_ln65_4 = bitcast i32 %output_0_load_4" [matmul.cpp:65]   --->   Operation 175 'bitcast' 'bitcast_ln65_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 176 [1/1] (0.00ns)   --->   "%tmp_66 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_4, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 176 'partselect' 'tmp_66' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 177 [1/1] (0.00ns)   --->   "%trunc_ln65_4 = trunc i32 %bitcast_ln65_4" [matmul.cpp:65]   --->   Operation 177 'trunc' 'trunc_ln65_4' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 178 [1/1] (0.85ns)   --->   "%icmp_ln65_8 = icmp_ne  i8 %tmp_66, i8 255" [matmul.cpp:65]   --->   Operation 178 'icmp' 'icmp_ln65_8' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 179 [1/1] (0.97ns)   --->   "%icmp_ln65_9 = icmp_eq  i23 %trunc_ln65_4, i23 0" [matmul.cpp:65]   --->   Operation 179 'icmp' 'icmp_ln65_9' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 180 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_4)   --->   "%or_ln65_4 = or i1 %icmp_ln65_9, i1 %icmp_ln65_8" [matmul.cpp:65]   --->   Operation 180 'or' 'or_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 181 [1/2] (3.34ns)   --->   "%tmp_67 = fcmp_olt  i32 %output_0_load_4, i32 0" [matmul.cpp:65]   --->   Operation 181 'fcmp' 'tmp_67' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 182 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_4)   --->   "%and_ln65_4 = and i1 %or_ln65_4, i1 %tmp_67" [matmul.cpp:65]   --->   Operation 182 'and' 'and_ln65_4' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 183 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_4 = select i1 %and_ln65_4, i32 0, i32 %output_0_load_4" [matmul.cpp:65]   --->   Operation 183 'select' 'select_ln65_4' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 184 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_4, i5 %output_0_addr_4" [matmul.cpp:66]   --->   Operation 184 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_19 : Operation 185 [1/1] (0.00ns)   --->   "%bitcast_ln65_5 = bitcast i32 %output_0_load_5" [matmul.cpp:65]   --->   Operation 185 'bitcast' 'bitcast_ln65_5' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 186 [1/1] (0.00ns)   --->   "%tmp_68 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_5, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 186 'partselect' 'tmp_68' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 187 [1/1] (0.00ns)   --->   "%trunc_ln65_5 = trunc i32 %bitcast_ln65_5" [matmul.cpp:65]   --->   Operation 187 'trunc' 'trunc_ln65_5' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 188 [1/1] (0.85ns)   --->   "%icmp_ln65_10 = icmp_ne  i8 %tmp_68, i8 255" [matmul.cpp:65]   --->   Operation 188 'icmp' 'icmp_ln65_10' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 189 [1/1] (0.97ns)   --->   "%icmp_ln65_11 = icmp_eq  i23 %trunc_ln65_5, i23 0" [matmul.cpp:65]   --->   Operation 189 'icmp' 'icmp_ln65_11' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 190 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_5)   --->   "%or_ln65_5 = or i1 %icmp_ln65_11, i1 %icmp_ln65_10" [matmul.cpp:65]   --->   Operation 190 'or' 'or_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 191 [1/2] (3.34ns)   --->   "%tmp_69 = fcmp_olt  i32 %output_0_load_5, i32 0" [matmul.cpp:65]   --->   Operation 191 'fcmp' 'tmp_69' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 192 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_5)   --->   "%and_ln65_5 = and i1 %or_ln65_5, i1 %tmp_69" [matmul.cpp:65]   --->   Operation 192 'and' 'and_ln65_5' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 193 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_5 = select i1 %and_ln65_5, i32 0, i32 %output_0_load_5" [matmul.cpp:65]   --->   Operation 193 'select' 'select_ln65_5' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_19 : Operation 194 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_5, i5 %output_0_addr_5" [matmul.cpp:66]   --->   Operation 194 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_19 : Operation 195 [2/2] (3.34ns)   --->   "%tmp_71 = fcmp_olt  i32 %output_0_load_6, i32 0" [matmul.cpp:65]   --->   Operation 195 'fcmp' 'tmp_71' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_19 : Operation 196 [2/2] (3.34ns)   --->   "%tmp_73 = fcmp_olt  i32 %output_0_load_7, i32 0" [matmul.cpp:65]   --->   Operation 196 'fcmp' 'tmp_73' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 19> <Delay = 5.22>
ST_20 : Operation 197 [1/1] (0.00ns)   --->   "%bitcast_ln65_6 = bitcast i32 %output_0_load_6" [matmul.cpp:65]   --->   Operation 197 'bitcast' 'bitcast_ln65_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 198 [1/1] (0.00ns)   --->   "%tmp_70 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_6, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 198 'partselect' 'tmp_70' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 199 [1/1] (0.00ns)   --->   "%trunc_ln65_6 = trunc i32 %bitcast_ln65_6" [matmul.cpp:65]   --->   Operation 199 'trunc' 'trunc_ln65_6' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 200 [1/1] (0.85ns)   --->   "%icmp_ln65_12 = icmp_ne  i8 %tmp_70, i8 255" [matmul.cpp:65]   --->   Operation 200 'icmp' 'icmp_ln65_12' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 201 [1/1] (0.97ns)   --->   "%icmp_ln65_13 = icmp_eq  i23 %trunc_ln65_6, i23 0" [matmul.cpp:65]   --->   Operation 201 'icmp' 'icmp_ln65_13' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 202 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_6)   --->   "%or_ln65_6 = or i1 %icmp_ln65_13, i1 %icmp_ln65_12" [matmul.cpp:65]   --->   Operation 202 'or' 'or_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 203 [1/2] (3.34ns)   --->   "%tmp_71 = fcmp_olt  i32 %output_0_load_6, i32 0" [matmul.cpp:65]   --->   Operation 203 'fcmp' 'tmp_71' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 204 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_6)   --->   "%and_ln65_6 = and i1 %or_ln65_6, i1 %tmp_71" [matmul.cpp:65]   --->   Operation 204 'and' 'and_ln65_6' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 205 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_6 = select i1 %and_ln65_6, i32 0, i32 %output_0_load_6" [matmul.cpp:65]   --->   Operation 205 'select' 'select_ln65_6' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 206 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_6, i5 %output_0_addr_6" [matmul.cpp:66]   --->   Operation 206 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_20 : Operation 207 [1/1] (0.00ns)   --->   "%bitcast_ln65_7 = bitcast i32 %output_0_load_7" [matmul.cpp:65]   --->   Operation 207 'bitcast' 'bitcast_ln65_7' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 208 [1/1] (0.00ns)   --->   "%tmp_72 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_7, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 208 'partselect' 'tmp_72' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 209 [1/1] (0.00ns)   --->   "%trunc_ln65_7 = trunc i32 %bitcast_ln65_7" [matmul.cpp:65]   --->   Operation 209 'trunc' 'trunc_ln65_7' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 210 [1/1] (0.85ns)   --->   "%icmp_ln65_14 = icmp_ne  i8 %tmp_72, i8 255" [matmul.cpp:65]   --->   Operation 210 'icmp' 'icmp_ln65_14' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 211 [1/1] (0.97ns)   --->   "%icmp_ln65_15 = icmp_eq  i23 %trunc_ln65_7, i23 0" [matmul.cpp:65]   --->   Operation 211 'icmp' 'icmp_ln65_15' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 212 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_7)   --->   "%or_ln65_7 = or i1 %icmp_ln65_15, i1 %icmp_ln65_14" [matmul.cpp:65]   --->   Operation 212 'or' 'or_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 213 [1/2] (3.34ns)   --->   "%tmp_73 = fcmp_olt  i32 %output_0_load_7, i32 0" [matmul.cpp:65]   --->   Operation 213 'fcmp' 'tmp_73' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 214 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_7)   --->   "%and_ln65_7 = and i1 %or_ln65_7, i1 %tmp_73" [matmul.cpp:65]   --->   Operation 214 'and' 'and_ln65_7' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 215 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_7 = select i1 %and_ln65_7, i32 0, i32 %output_0_load_7" [matmul.cpp:65]   --->   Operation 215 'select' 'select_ln65_7' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_20 : Operation 216 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_7, i5 %output_0_addr_7" [matmul.cpp:66]   --->   Operation 216 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_20 : Operation 217 [2/2] (3.34ns)   --->   "%tmp_75 = fcmp_olt  i32 %output_0_load_8, i32 0" [matmul.cpp:65]   --->   Operation 217 'fcmp' 'tmp_75' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 218 [2/2] (3.34ns)   --->   "%tmp_77 = fcmp_olt  i32 %output_0_load_9, i32 0" [matmul.cpp:65]   --->   Operation 218 'fcmp' 'tmp_77' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 20> <Delay = 5.22>
ST_21 : Operation 219 [1/1] (0.00ns)   --->   "%bitcast_ln65_8 = bitcast i32 %output_0_load_8" [matmul.cpp:65]   --->   Operation 219 'bitcast' 'bitcast_ln65_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 220 [1/1] (0.00ns)   --->   "%tmp_74 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_8, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 220 'partselect' 'tmp_74' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 221 [1/1] (0.00ns)   --->   "%trunc_ln65_8 = trunc i32 %bitcast_ln65_8" [matmul.cpp:65]   --->   Operation 221 'trunc' 'trunc_ln65_8' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 222 [1/1] (0.85ns)   --->   "%icmp_ln65_16 = icmp_ne  i8 %tmp_74, i8 255" [matmul.cpp:65]   --->   Operation 222 'icmp' 'icmp_ln65_16' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 223 [1/1] (0.97ns)   --->   "%icmp_ln65_17 = icmp_eq  i23 %trunc_ln65_8, i23 0" [matmul.cpp:65]   --->   Operation 223 'icmp' 'icmp_ln65_17' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 224 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_8)   --->   "%or_ln65_8 = or i1 %icmp_ln65_17, i1 %icmp_ln65_16" [matmul.cpp:65]   --->   Operation 224 'or' 'or_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 225 [1/2] (3.34ns)   --->   "%tmp_75 = fcmp_olt  i32 %output_0_load_8, i32 0" [matmul.cpp:65]   --->   Operation 225 'fcmp' 'tmp_75' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 226 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_8)   --->   "%and_ln65_8 = and i1 %or_ln65_8, i1 %tmp_75" [matmul.cpp:65]   --->   Operation 226 'and' 'and_ln65_8' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 227 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_8 = select i1 %and_ln65_8, i32 0, i32 %output_0_load_8" [matmul.cpp:65]   --->   Operation 227 'select' 'select_ln65_8' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 228 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_8, i5 %output_0_addr_8" [matmul.cpp:66]   --->   Operation 228 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_21 : Operation 229 [1/1] (0.00ns)   --->   "%bitcast_ln65_9 = bitcast i32 %output_0_load_9" [matmul.cpp:65]   --->   Operation 229 'bitcast' 'bitcast_ln65_9' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 230 [1/1] (0.00ns)   --->   "%tmp_76 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_9, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 230 'partselect' 'tmp_76' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 231 [1/1] (0.00ns)   --->   "%trunc_ln65_9 = trunc i32 %bitcast_ln65_9" [matmul.cpp:65]   --->   Operation 231 'trunc' 'trunc_ln65_9' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 232 [1/1] (0.85ns)   --->   "%icmp_ln65_18 = icmp_ne  i8 %tmp_76, i8 255" [matmul.cpp:65]   --->   Operation 232 'icmp' 'icmp_ln65_18' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 233 [1/1] (0.97ns)   --->   "%icmp_ln65_19 = icmp_eq  i23 %trunc_ln65_9, i23 0" [matmul.cpp:65]   --->   Operation 233 'icmp' 'icmp_ln65_19' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 234 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_9)   --->   "%or_ln65_9 = or i1 %icmp_ln65_19, i1 %icmp_ln65_18" [matmul.cpp:65]   --->   Operation 234 'or' 'or_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 235 [1/2] (3.34ns)   --->   "%tmp_77 = fcmp_olt  i32 %output_0_load_9, i32 0" [matmul.cpp:65]   --->   Operation 235 'fcmp' 'tmp_77' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 236 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_9)   --->   "%and_ln65_9 = and i1 %or_ln65_9, i1 %tmp_77" [matmul.cpp:65]   --->   Operation 236 'and' 'and_ln65_9' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 237 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_9 = select i1 %and_ln65_9, i32 0, i32 %output_0_load_9" [matmul.cpp:65]   --->   Operation 237 'select' 'select_ln65_9' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_21 : Operation 238 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_9, i5 %output_0_addr_9" [matmul.cpp:66]   --->   Operation 238 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_21 : Operation 239 [2/2] (3.34ns)   --->   "%tmp_79 = fcmp_olt  i32 %output_0_load_10, i32 0" [matmul.cpp:65]   --->   Operation 239 'fcmp' 'tmp_79' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 240 [2/2] (3.34ns)   --->   "%tmp_81 = fcmp_olt  i32 %output_0_load_11, i32 0" [matmul.cpp:65]   --->   Operation 240 'fcmp' 'tmp_81' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 21> <Delay = 5.22>
ST_22 : Operation 241 [1/1] (0.00ns)   --->   "%bitcast_ln65_10 = bitcast i32 %output_0_load_10" [matmul.cpp:65]   --->   Operation 241 'bitcast' 'bitcast_ln65_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 242 [1/1] (0.00ns)   --->   "%tmp_78 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_10, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 242 'partselect' 'tmp_78' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 243 [1/1] (0.00ns)   --->   "%trunc_ln65_10 = trunc i32 %bitcast_ln65_10" [matmul.cpp:65]   --->   Operation 243 'trunc' 'trunc_ln65_10' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 244 [1/1] (0.85ns)   --->   "%icmp_ln65_20 = icmp_ne  i8 %tmp_78, i8 255" [matmul.cpp:65]   --->   Operation 244 'icmp' 'icmp_ln65_20' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 245 [1/1] (0.97ns)   --->   "%icmp_ln65_21 = icmp_eq  i23 %trunc_ln65_10, i23 0" [matmul.cpp:65]   --->   Operation 245 'icmp' 'icmp_ln65_21' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_10)   --->   "%or_ln65_10 = or i1 %icmp_ln65_21, i1 %icmp_ln65_20" [matmul.cpp:65]   --->   Operation 246 'or' 'or_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 247 [1/2] (3.34ns)   --->   "%tmp_79 = fcmp_olt  i32 %output_0_load_10, i32 0" [matmul.cpp:65]   --->   Operation 247 'fcmp' 'tmp_79' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 248 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_10)   --->   "%and_ln65_10 = and i1 %or_ln65_10, i1 %tmp_79" [matmul.cpp:65]   --->   Operation 248 'and' 'and_ln65_10' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 249 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_10 = select i1 %and_ln65_10, i32 0, i32 %output_0_load_10" [matmul.cpp:65]   --->   Operation 249 'select' 'select_ln65_10' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 250 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_10, i5 %output_0_addr_10" [matmul.cpp:66]   --->   Operation 250 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_22 : Operation 251 [1/1] (0.00ns)   --->   "%bitcast_ln65_11 = bitcast i32 %output_0_load_11" [matmul.cpp:65]   --->   Operation 251 'bitcast' 'bitcast_ln65_11' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 252 [1/1] (0.00ns)   --->   "%tmp_80 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_11, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 252 'partselect' 'tmp_80' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 253 [1/1] (0.00ns)   --->   "%trunc_ln65_11 = trunc i32 %bitcast_ln65_11" [matmul.cpp:65]   --->   Operation 253 'trunc' 'trunc_ln65_11' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 254 [1/1] (0.85ns)   --->   "%icmp_ln65_22 = icmp_ne  i8 %tmp_80, i8 255" [matmul.cpp:65]   --->   Operation 254 'icmp' 'icmp_ln65_22' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 255 [1/1] (0.97ns)   --->   "%icmp_ln65_23 = icmp_eq  i23 %trunc_ln65_11, i23 0" [matmul.cpp:65]   --->   Operation 255 'icmp' 'icmp_ln65_23' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 256 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_11)   --->   "%or_ln65_11 = or i1 %icmp_ln65_23, i1 %icmp_ln65_22" [matmul.cpp:65]   --->   Operation 256 'or' 'or_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 257 [1/2] (3.34ns)   --->   "%tmp_81 = fcmp_olt  i32 %output_0_load_11, i32 0" [matmul.cpp:65]   --->   Operation 257 'fcmp' 'tmp_81' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 258 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_11)   --->   "%and_ln65_11 = and i1 %or_ln65_11, i1 %tmp_81" [matmul.cpp:65]   --->   Operation 258 'and' 'and_ln65_11' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 259 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_11 = select i1 %and_ln65_11, i32 0, i32 %output_0_load_11" [matmul.cpp:65]   --->   Operation 259 'select' 'select_ln65_11' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_22 : Operation 260 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_11, i5 %output_0_addr_11" [matmul.cpp:66]   --->   Operation 260 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_22 : Operation 261 [2/2] (3.34ns)   --->   "%tmp_83 = fcmp_olt  i32 %output_0_load_12, i32 0" [matmul.cpp:65]   --->   Operation 261 'fcmp' 'tmp_83' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 262 [2/2] (3.34ns)   --->   "%tmp_85 = fcmp_olt  i32 %output_0_load_13, i32 0" [matmul.cpp:65]   --->   Operation 262 'fcmp' 'tmp_85' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 22> <Delay = 5.22>
ST_23 : Operation 263 [1/1] (0.00ns)   --->   "%bitcast_ln65_12 = bitcast i32 %output_0_load_12" [matmul.cpp:65]   --->   Operation 263 'bitcast' 'bitcast_ln65_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 264 [1/1] (0.00ns)   --->   "%tmp_82 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_12, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 264 'partselect' 'tmp_82' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 265 [1/1] (0.00ns)   --->   "%trunc_ln65_12 = trunc i32 %bitcast_ln65_12" [matmul.cpp:65]   --->   Operation 265 'trunc' 'trunc_ln65_12' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 266 [1/1] (0.85ns)   --->   "%icmp_ln65_24 = icmp_ne  i8 %tmp_82, i8 255" [matmul.cpp:65]   --->   Operation 266 'icmp' 'icmp_ln65_24' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 267 [1/1] (0.97ns)   --->   "%icmp_ln65_25 = icmp_eq  i23 %trunc_ln65_12, i23 0" [matmul.cpp:65]   --->   Operation 267 'icmp' 'icmp_ln65_25' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 268 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_12)   --->   "%or_ln65_12 = or i1 %icmp_ln65_25, i1 %icmp_ln65_24" [matmul.cpp:65]   --->   Operation 268 'or' 'or_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 269 [1/2] (3.34ns)   --->   "%tmp_83 = fcmp_olt  i32 %output_0_load_12, i32 0" [matmul.cpp:65]   --->   Operation 269 'fcmp' 'tmp_83' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_12)   --->   "%and_ln65_12 = and i1 %or_ln65_12, i1 %tmp_83" [matmul.cpp:65]   --->   Operation 270 'and' 'and_ln65_12' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 271 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_12 = select i1 %and_ln65_12, i32 0, i32 %output_0_load_12" [matmul.cpp:65]   --->   Operation 271 'select' 'select_ln65_12' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 272 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_12, i5 %output_0_addr_12" [matmul.cpp:66]   --->   Operation 272 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_23 : Operation 273 [1/1] (0.00ns)   --->   "%bitcast_ln65_13 = bitcast i32 %output_0_load_13" [matmul.cpp:65]   --->   Operation 273 'bitcast' 'bitcast_ln65_13' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 274 [1/1] (0.00ns)   --->   "%tmp_84 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_13, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 274 'partselect' 'tmp_84' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 275 [1/1] (0.00ns)   --->   "%trunc_ln65_13 = trunc i32 %bitcast_ln65_13" [matmul.cpp:65]   --->   Operation 275 'trunc' 'trunc_ln65_13' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 276 [1/1] (0.85ns)   --->   "%icmp_ln65_26 = icmp_ne  i8 %tmp_84, i8 255" [matmul.cpp:65]   --->   Operation 276 'icmp' 'icmp_ln65_26' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 277 [1/1] (0.97ns)   --->   "%icmp_ln65_27 = icmp_eq  i23 %trunc_ln65_13, i23 0" [matmul.cpp:65]   --->   Operation 277 'icmp' 'icmp_ln65_27' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 278 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_13)   --->   "%or_ln65_13 = or i1 %icmp_ln65_27, i1 %icmp_ln65_26" [matmul.cpp:65]   --->   Operation 278 'or' 'or_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 279 [1/2] (3.34ns)   --->   "%tmp_85 = fcmp_olt  i32 %output_0_load_13, i32 0" [matmul.cpp:65]   --->   Operation 279 'fcmp' 'tmp_85' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 280 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_13)   --->   "%and_ln65_13 = and i1 %or_ln65_13, i1 %tmp_85" [matmul.cpp:65]   --->   Operation 280 'and' 'and_ln65_13' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 281 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_13 = select i1 %and_ln65_13, i32 0, i32 %output_0_load_13" [matmul.cpp:65]   --->   Operation 281 'select' 'select_ln65_13' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_23 : Operation 282 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_13, i5 %output_0_addr_13" [matmul.cpp:66]   --->   Operation 282 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_23 : Operation 283 [2/2] (3.34ns)   --->   "%tmp_87 = fcmp_olt  i32 %output_0_load_14, i32 0" [matmul.cpp:65]   --->   Operation 283 'fcmp' 'tmp_87' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 284 [2/2] (3.34ns)   --->   "%tmp_89 = fcmp_olt  i32 %output_0_load_15, i32 0" [matmul.cpp:65]   --->   Operation 284 'fcmp' 'tmp_89' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 23> <Delay = 5.22>
ST_24 : Operation 285 [1/1] (0.00ns)   --->   "%bitcast_ln65_14 = bitcast i32 %output_0_load_14" [matmul.cpp:65]   --->   Operation 285 'bitcast' 'bitcast_ln65_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 286 [1/1] (0.00ns)   --->   "%tmp_86 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_14, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 286 'partselect' 'tmp_86' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 287 [1/1] (0.00ns)   --->   "%trunc_ln65_14 = trunc i32 %bitcast_ln65_14" [matmul.cpp:65]   --->   Operation 287 'trunc' 'trunc_ln65_14' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 288 [1/1] (0.85ns)   --->   "%icmp_ln65_28 = icmp_ne  i8 %tmp_86, i8 255" [matmul.cpp:65]   --->   Operation 288 'icmp' 'icmp_ln65_28' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 289 [1/1] (0.97ns)   --->   "%icmp_ln65_29 = icmp_eq  i23 %trunc_ln65_14, i23 0" [matmul.cpp:65]   --->   Operation 289 'icmp' 'icmp_ln65_29' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 290 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_14)   --->   "%or_ln65_14 = or i1 %icmp_ln65_29, i1 %icmp_ln65_28" [matmul.cpp:65]   --->   Operation 290 'or' 'or_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 291 [1/2] (3.34ns)   --->   "%tmp_87 = fcmp_olt  i32 %output_0_load_14, i32 0" [matmul.cpp:65]   --->   Operation 291 'fcmp' 'tmp_87' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 292 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_14)   --->   "%and_ln65_14 = and i1 %or_ln65_14, i1 %tmp_87" [matmul.cpp:65]   --->   Operation 292 'and' 'and_ln65_14' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 293 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_14 = select i1 %and_ln65_14, i32 0, i32 %output_0_load_14" [matmul.cpp:65]   --->   Operation 293 'select' 'select_ln65_14' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 294 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_14, i5 %output_0_addr_14" [matmul.cpp:66]   --->   Operation 294 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_24 : Operation 295 [1/1] (0.00ns)   --->   "%bitcast_ln65_15 = bitcast i32 %output_0_load_15" [matmul.cpp:65]   --->   Operation 295 'bitcast' 'bitcast_ln65_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 296 [1/1] (0.00ns)   --->   "%tmp_88 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_15, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 296 'partselect' 'tmp_88' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 297 [1/1] (0.00ns)   --->   "%trunc_ln65_15 = trunc i32 %bitcast_ln65_15" [matmul.cpp:65]   --->   Operation 297 'trunc' 'trunc_ln65_15' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 298 [1/1] (0.85ns)   --->   "%icmp_ln65_30 = icmp_ne  i8 %tmp_88, i8 255" [matmul.cpp:65]   --->   Operation 298 'icmp' 'icmp_ln65_30' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 299 [1/1] (0.97ns)   --->   "%icmp_ln65_31 = icmp_eq  i23 %trunc_ln65_15, i23 0" [matmul.cpp:65]   --->   Operation 299 'icmp' 'icmp_ln65_31' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 300 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_15)   --->   "%or_ln65_15 = or i1 %icmp_ln65_31, i1 %icmp_ln65_30" [matmul.cpp:65]   --->   Operation 300 'or' 'or_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 301 [1/2] (3.34ns)   --->   "%tmp_89 = fcmp_olt  i32 %output_0_load_15, i32 0" [matmul.cpp:65]   --->   Operation 301 'fcmp' 'tmp_89' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 302 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_15)   --->   "%and_ln65_15 = and i1 %or_ln65_15, i1 %tmp_89" [matmul.cpp:65]   --->   Operation 302 'and' 'and_ln65_15' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 303 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_15 = select i1 %and_ln65_15, i32 0, i32 %output_0_load_15" [matmul.cpp:65]   --->   Operation 303 'select' 'select_ln65_15' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_24 : Operation 304 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_15, i5 %output_0_addr_15" [matmul.cpp:66]   --->   Operation 304 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_24 : Operation 305 [2/2] (3.34ns)   --->   "%tmp_91 = fcmp_olt  i32 %output_0_load_16, i32 0" [matmul.cpp:65]   --->   Operation 305 'fcmp' 'tmp_91' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 306 [2/2] (3.34ns)   --->   "%tmp_93 = fcmp_olt  i32 %output_0_load_17, i32 0" [matmul.cpp:65]   --->   Operation 306 'fcmp' 'tmp_93' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 24> <Delay = 5.22>
ST_25 : Operation 307 [1/1] (0.00ns)   --->   "%bitcast_ln65_16 = bitcast i32 %output_0_load_16" [matmul.cpp:65]   --->   Operation 307 'bitcast' 'bitcast_ln65_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 308 [1/1] (0.00ns)   --->   "%tmp_90 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_16, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 308 'partselect' 'tmp_90' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 309 [1/1] (0.00ns)   --->   "%trunc_ln65_16 = trunc i32 %bitcast_ln65_16" [matmul.cpp:65]   --->   Operation 309 'trunc' 'trunc_ln65_16' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 310 [1/1] (0.85ns)   --->   "%icmp_ln65_32 = icmp_ne  i8 %tmp_90, i8 255" [matmul.cpp:65]   --->   Operation 310 'icmp' 'icmp_ln65_32' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 311 [1/1] (0.97ns)   --->   "%icmp_ln65_33 = icmp_eq  i23 %trunc_ln65_16, i23 0" [matmul.cpp:65]   --->   Operation 311 'icmp' 'icmp_ln65_33' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 312 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_16)   --->   "%or_ln65_16 = or i1 %icmp_ln65_33, i1 %icmp_ln65_32" [matmul.cpp:65]   --->   Operation 312 'or' 'or_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 313 [1/2] (3.34ns)   --->   "%tmp_91 = fcmp_olt  i32 %output_0_load_16, i32 0" [matmul.cpp:65]   --->   Operation 313 'fcmp' 'tmp_91' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 314 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_16)   --->   "%and_ln65_16 = and i1 %or_ln65_16, i1 %tmp_91" [matmul.cpp:65]   --->   Operation 314 'and' 'and_ln65_16' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 315 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_16 = select i1 %and_ln65_16, i32 0, i32 %output_0_load_16" [matmul.cpp:65]   --->   Operation 315 'select' 'select_ln65_16' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 316 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_16, i5 %output_0_addr_16" [matmul.cpp:66]   --->   Operation 316 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_25 : Operation 317 [1/1] (0.00ns)   --->   "%bitcast_ln65_17 = bitcast i32 %output_0_load_17" [matmul.cpp:65]   --->   Operation 317 'bitcast' 'bitcast_ln65_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 318 [1/1] (0.00ns)   --->   "%tmp_92 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_17, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 318 'partselect' 'tmp_92' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 319 [1/1] (0.00ns)   --->   "%trunc_ln65_17 = trunc i32 %bitcast_ln65_17" [matmul.cpp:65]   --->   Operation 319 'trunc' 'trunc_ln65_17' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 320 [1/1] (0.85ns)   --->   "%icmp_ln65_34 = icmp_ne  i8 %tmp_92, i8 255" [matmul.cpp:65]   --->   Operation 320 'icmp' 'icmp_ln65_34' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 321 [1/1] (0.97ns)   --->   "%icmp_ln65_35 = icmp_eq  i23 %trunc_ln65_17, i23 0" [matmul.cpp:65]   --->   Operation 321 'icmp' 'icmp_ln65_35' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 322 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_17)   --->   "%or_ln65_17 = or i1 %icmp_ln65_35, i1 %icmp_ln65_34" [matmul.cpp:65]   --->   Operation 322 'or' 'or_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 323 [1/2] (3.34ns)   --->   "%tmp_93 = fcmp_olt  i32 %output_0_load_17, i32 0" [matmul.cpp:65]   --->   Operation 323 'fcmp' 'tmp_93' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 324 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_17)   --->   "%and_ln65_17 = and i1 %or_ln65_17, i1 %tmp_93" [matmul.cpp:65]   --->   Operation 324 'and' 'and_ln65_17' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 325 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_17 = select i1 %and_ln65_17, i32 0, i32 %output_0_load_17" [matmul.cpp:65]   --->   Operation 325 'select' 'select_ln65_17' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_25 : Operation 326 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_17, i5 %output_0_addr_17" [matmul.cpp:66]   --->   Operation 326 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_25 : Operation 327 [2/2] (3.34ns)   --->   "%tmp_95 = fcmp_olt  i32 %output_0_load_18, i32 0" [matmul.cpp:65]   --->   Operation 327 'fcmp' 'tmp_95' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 328 [2/2] (3.34ns)   --->   "%tmp_97 = fcmp_olt  i32 %output_0_load_19, i32 0" [matmul.cpp:65]   --->   Operation 328 'fcmp' 'tmp_97' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 25> <Delay = 5.22>
ST_26 : Operation 329 [1/1] (0.00ns)   --->   "%bitcast_ln65_18 = bitcast i32 %output_0_load_18" [matmul.cpp:65]   --->   Operation 329 'bitcast' 'bitcast_ln65_18' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 330 [1/1] (0.00ns)   --->   "%tmp_94 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_18, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 330 'partselect' 'tmp_94' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 331 [1/1] (0.00ns)   --->   "%trunc_ln65_18 = trunc i32 %bitcast_ln65_18" [matmul.cpp:65]   --->   Operation 331 'trunc' 'trunc_ln65_18' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 332 [1/1] (0.85ns)   --->   "%icmp_ln65_36 = icmp_ne  i8 %tmp_94, i8 255" [matmul.cpp:65]   --->   Operation 332 'icmp' 'icmp_ln65_36' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 333 [1/1] (0.97ns)   --->   "%icmp_ln65_37 = icmp_eq  i23 %trunc_ln65_18, i23 0" [matmul.cpp:65]   --->   Operation 333 'icmp' 'icmp_ln65_37' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 334 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_18)   --->   "%or_ln65_18 = or i1 %icmp_ln65_37, i1 %icmp_ln65_36" [matmul.cpp:65]   --->   Operation 334 'or' 'or_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 335 [1/2] (3.34ns)   --->   "%tmp_95 = fcmp_olt  i32 %output_0_load_18, i32 0" [matmul.cpp:65]   --->   Operation 335 'fcmp' 'tmp_95' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 336 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_18)   --->   "%and_ln65_18 = and i1 %or_ln65_18, i1 %tmp_95" [matmul.cpp:65]   --->   Operation 336 'and' 'and_ln65_18' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 337 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_18 = select i1 %and_ln65_18, i32 0, i32 %output_0_load_18" [matmul.cpp:65]   --->   Operation 337 'select' 'select_ln65_18' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 338 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_18, i5 %output_0_addr_18" [matmul.cpp:66]   --->   Operation 338 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_26 : Operation 339 [1/1] (0.00ns)   --->   "%bitcast_ln65_19 = bitcast i32 %output_0_load_19" [matmul.cpp:65]   --->   Operation 339 'bitcast' 'bitcast_ln65_19' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 340 [1/1] (0.00ns)   --->   "%tmp_96 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_19, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 340 'partselect' 'tmp_96' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 341 [1/1] (0.00ns)   --->   "%trunc_ln65_19 = trunc i32 %bitcast_ln65_19" [matmul.cpp:65]   --->   Operation 341 'trunc' 'trunc_ln65_19' <Predicate = true> <Delay = 0.00>
ST_26 : Operation 342 [1/1] (0.85ns)   --->   "%icmp_ln65_38 = icmp_ne  i8 %tmp_96, i8 255" [matmul.cpp:65]   --->   Operation 342 'icmp' 'icmp_ln65_38' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 343 [1/1] (0.97ns)   --->   "%icmp_ln65_39 = icmp_eq  i23 %trunc_ln65_19, i23 0" [matmul.cpp:65]   --->   Operation 343 'icmp' 'icmp_ln65_39' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_19)   --->   "%or_ln65_19 = or i1 %icmp_ln65_39, i1 %icmp_ln65_38" [matmul.cpp:65]   --->   Operation 344 'or' 'or_ln65_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 345 [1/2] (3.34ns)   --->   "%tmp_97 = fcmp_olt  i32 %output_0_load_19, i32 0" [matmul.cpp:65]   --->   Operation 345 'fcmp' 'tmp_97' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 346 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_19)   --->   "%and_ln65_19 = and i1 %or_ln65_19, i1 %tmp_97" [matmul.cpp:65]   --->   Operation 346 'and' 'and_ln65_19' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 347 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_19 = select i1 %and_ln65_19, i32 0, i32 %output_0_load_19" [matmul.cpp:65]   --->   Operation 347 'select' 'select_ln65_19' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_26 : Operation 348 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_19, i5 %output_0_addr_19" [matmul.cpp:66]   --->   Operation 348 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_26 : Operation 349 [2/2] (3.34ns)   --->   "%tmp_99 = fcmp_olt  i32 %output_0_load_20, i32 0" [matmul.cpp:65]   --->   Operation 349 'fcmp' 'tmp_99' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_26 : Operation 350 [2/2] (3.34ns)   --->   "%tmp_101 = fcmp_olt  i32 %output_0_load_21, i32 0" [matmul.cpp:65]   --->   Operation 350 'fcmp' 'tmp_101' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 26> <Delay = 5.22>
ST_27 : Operation 351 [1/1] (0.00ns)   --->   "%bitcast_ln65_20 = bitcast i32 %output_0_load_20" [matmul.cpp:65]   --->   Operation 351 'bitcast' 'bitcast_ln65_20' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 352 [1/1] (0.00ns)   --->   "%tmp_98 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_20, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 352 'partselect' 'tmp_98' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 353 [1/1] (0.00ns)   --->   "%trunc_ln65_20 = trunc i32 %bitcast_ln65_20" [matmul.cpp:65]   --->   Operation 353 'trunc' 'trunc_ln65_20' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 354 [1/1] (0.85ns)   --->   "%icmp_ln65_40 = icmp_ne  i8 %tmp_98, i8 255" [matmul.cpp:65]   --->   Operation 354 'icmp' 'icmp_ln65_40' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 355 [1/1] (0.97ns)   --->   "%icmp_ln65_41 = icmp_eq  i23 %trunc_ln65_20, i23 0" [matmul.cpp:65]   --->   Operation 355 'icmp' 'icmp_ln65_41' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 356 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_20)   --->   "%or_ln65_20 = or i1 %icmp_ln65_41, i1 %icmp_ln65_40" [matmul.cpp:65]   --->   Operation 356 'or' 'or_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 357 [1/2] (3.34ns)   --->   "%tmp_99 = fcmp_olt  i32 %output_0_load_20, i32 0" [matmul.cpp:65]   --->   Operation 357 'fcmp' 'tmp_99' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 358 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_20)   --->   "%and_ln65_20 = and i1 %or_ln65_20, i1 %tmp_99" [matmul.cpp:65]   --->   Operation 358 'and' 'and_ln65_20' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 359 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_20 = select i1 %and_ln65_20, i32 0, i32 %output_0_load_20" [matmul.cpp:65]   --->   Operation 359 'select' 'select_ln65_20' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 360 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_20, i5 %output_0_addr_20" [matmul.cpp:66]   --->   Operation 360 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_27 : Operation 361 [1/1] (0.00ns)   --->   "%bitcast_ln65_21 = bitcast i32 %output_0_load_21" [matmul.cpp:65]   --->   Operation 361 'bitcast' 'bitcast_ln65_21' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 362 [1/1] (0.00ns)   --->   "%tmp_100 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_21, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 362 'partselect' 'tmp_100' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 363 [1/1] (0.00ns)   --->   "%trunc_ln65_21 = trunc i32 %bitcast_ln65_21" [matmul.cpp:65]   --->   Operation 363 'trunc' 'trunc_ln65_21' <Predicate = true> <Delay = 0.00>
ST_27 : Operation 364 [1/1] (0.85ns)   --->   "%icmp_ln65_42 = icmp_ne  i8 %tmp_100, i8 255" [matmul.cpp:65]   --->   Operation 364 'icmp' 'icmp_ln65_42' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 365 [1/1] (0.97ns)   --->   "%icmp_ln65_43 = icmp_eq  i23 %trunc_ln65_21, i23 0" [matmul.cpp:65]   --->   Operation 365 'icmp' 'icmp_ln65_43' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 366 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_21)   --->   "%or_ln65_21 = or i1 %icmp_ln65_43, i1 %icmp_ln65_42" [matmul.cpp:65]   --->   Operation 366 'or' 'or_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 367 [1/2] (3.34ns)   --->   "%tmp_101 = fcmp_olt  i32 %output_0_load_21, i32 0" [matmul.cpp:65]   --->   Operation 367 'fcmp' 'tmp_101' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 368 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_21)   --->   "%and_ln65_21 = and i1 %or_ln65_21, i1 %tmp_101" [matmul.cpp:65]   --->   Operation 368 'and' 'and_ln65_21' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 369 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_21 = select i1 %and_ln65_21, i32 0, i32 %output_0_load_21" [matmul.cpp:65]   --->   Operation 369 'select' 'select_ln65_21' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_27 : Operation 370 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_21, i5 %output_0_addr_21" [matmul.cpp:66]   --->   Operation 370 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_27 : Operation 371 [2/2] (3.34ns)   --->   "%tmp_103 = fcmp_olt  i32 %output_0_load_22, i32 0" [matmul.cpp:65]   --->   Operation 371 'fcmp' 'tmp_103' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_27 : Operation 372 [2/2] (3.34ns)   --->   "%tmp_105 = fcmp_olt  i32 %output_0_load_23, i32 0" [matmul.cpp:65]   --->   Operation 372 'fcmp' 'tmp_105' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 27> <Delay = 5.22>
ST_28 : Operation 373 [1/1] (0.00ns)   --->   "%bitcast_ln65_22 = bitcast i32 %output_0_load_22" [matmul.cpp:65]   --->   Operation 373 'bitcast' 'bitcast_ln65_22' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 374 [1/1] (0.00ns)   --->   "%tmp_102 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_22, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 374 'partselect' 'tmp_102' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 375 [1/1] (0.00ns)   --->   "%trunc_ln65_22 = trunc i32 %bitcast_ln65_22" [matmul.cpp:65]   --->   Operation 375 'trunc' 'trunc_ln65_22' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 376 [1/1] (0.85ns)   --->   "%icmp_ln65_44 = icmp_ne  i8 %tmp_102, i8 255" [matmul.cpp:65]   --->   Operation 376 'icmp' 'icmp_ln65_44' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 377 [1/1] (0.97ns)   --->   "%icmp_ln65_45 = icmp_eq  i23 %trunc_ln65_22, i23 0" [matmul.cpp:65]   --->   Operation 377 'icmp' 'icmp_ln65_45' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 378 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_22)   --->   "%or_ln65_22 = or i1 %icmp_ln65_45, i1 %icmp_ln65_44" [matmul.cpp:65]   --->   Operation 378 'or' 'or_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 379 [1/2] (3.34ns)   --->   "%tmp_103 = fcmp_olt  i32 %output_0_load_22, i32 0" [matmul.cpp:65]   --->   Operation 379 'fcmp' 'tmp_103' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 380 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_22)   --->   "%and_ln65_22 = and i1 %or_ln65_22, i1 %tmp_103" [matmul.cpp:65]   --->   Operation 380 'and' 'and_ln65_22' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 381 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_22 = select i1 %and_ln65_22, i32 0, i32 %output_0_load_22" [matmul.cpp:65]   --->   Operation 381 'select' 'select_ln65_22' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 382 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_22, i5 %output_0_addr_22" [matmul.cpp:66]   --->   Operation 382 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_28 : Operation 383 [1/1] (0.00ns)   --->   "%bitcast_ln65_23 = bitcast i32 %output_0_load_23" [matmul.cpp:65]   --->   Operation 383 'bitcast' 'bitcast_ln65_23' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 384 [1/1] (0.00ns)   --->   "%tmp_104 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_23, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 384 'partselect' 'tmp_104' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 385 [1/1] (0.00ns)   --->   "%trunc_ln65_23 = trunc i32 %bitcast_ln65_23" [matmul.cpp:65]   --->   Operation 385 'trunc' 'trunc_ln65_23' <Predicate = true> <Delay = 0.00>
ST_28 : Operation 386 [1/1] (0.85ns)   --->   "%icmp_ln65_46 = icmp_ne  i8 %tmp_104, i8 255" [matmul.cpp:65]   --->   Operation 386 'icmp' 'icmp_ln65_46' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 387 [1/1] (0.97ns)   --->   "%icmp_ln65_47 = icmp_eq  i23 %trunc_ln65_23, i23 0" [matmul.cpp:65]   --->   Operation 387 'icmp' 'icmp_ln65_47' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 388 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_23)   --->   "%or_ln65_23 = or i1 %icmp_ln65_47, i1 %icmp_ln65_46" [matmul.cpp:65]   --->   Operation 388 'or' 'or_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 389 [1/2] (3.34ns)   --->   "%tmp_105 = fcmp_olt  i32 %output_0_load_23, i32 0" [matmul.cpp:65]   --->   Operation 389 'fcmp' 'tmp_105' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 390 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_23)   --->   "%and_ln65_23 = and i1 %or_ln65_23, i1 %tmp_105" [matmul.cpp:65]   --->   Operation 390 'and' 'and_ln65_23' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 391 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_23 = select i1 %and_ln65_23, i32 0, i32 %output_0_load_23" [matmul.cpp:65]   --->   Operation 391 'select' 'select_ln65_23' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_28 : Operation 392 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_23, i5 %output_0_addr_23" [matmul.cpp:66]   --->   Operation 392 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_28 : Operation 393 [2/2] (3.34ns)   --->   "%tmp_107 = fcmp_olt  i32 %output_0_load_24, i32 0" [matmul.cpp:65]   --->   Operation 393 'fcmp' 'tmp_107' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_28 : Operation 394 [2/2] (3.34ns)   --->   "%tmp_109 = fcmp_olt  i32 %output_0_load_25, i32 0" [matmul.cpp:65]   --->   Operation 394 'fcmp' 'tmp_109' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 28> <Delay = 5.22>
ST_29 : Operation 395 [1/1] (0.00ns)   --->   "%bitcast_ln65_24 = bitcast i32 %output_0_load_24" [matmul.cpp:65]   --->   Operation 395 'bitcast' 'bitcast_ln65_24' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 396 [1/1] (0.00ns)   --->   "%tmp_106 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_24, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 396 'partselect' 'tmp_106' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 397 [1/1] (0.00ns)   --->   "%trunc_ln65_24 = trunc i32 %bitcast_ln65_24" [matmul.cpp:65]   --->   Operation 397 'trunc' 'trunc_ln65_24' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 398 [1/1] (0.85ns)   --->   "%icmp_ln65_48 = icmp_ne  i8 %tmp_106, i8 255" [matmul.cpp:65]   --->   Operation 398 'icmp' 'icmp_ln65_48' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 399 [1/1] (0.97ns)   --->   "%icmp_ln65_49 = icmp_eq  i23 %trunc_ln65_24, i23 0" [matmul.cpp:65]   --->   Operation 399 'icmp' 'icmp_ln65_49' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 400 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_24)   --->   "%or_ln65_24 = or i1 %icmp_ln65_49, i1 %icmp_ln65_48" [matmul.cpp:65]   --->   Operation 400 'or' 'or_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 401 [1/2] (3.34ns)   --->   "%tmp_107 = fcmp_olt  i32 %output_0_load_24, i32 0" [matmul.cpp:65]   --->   Operation 401 'fcmp' 'tmp_107' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 402 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_24)   --->   "%and_ln65_24 = and i1 %or_ln65_24, i1 %tmp_107" [matmul.cpp:65]   --->   Operation 402 'and' 'and_ln65_24' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 403 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_24 = select i1 %and_ln65_24, i32 0, i32 %output_0_load_24" [matmul.cpp:65]   --->   Operation 403 'select' 'select_ln65_24' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 404 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_24, i5 %output_0_addr_24" [matmul.cpp:66]   --->   Operation 404 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_29 : Operation 405 [1/1] (0.00ns)   --->   "%bitcast_ln65_25 = bitcast i32 %output_0_load_25" [matmul.cpp:65]   --->   Operation 405 'bitcast' 'bitcast_ln65_25' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 406 [1/1] (0.00ns)   --->   "%tmp_108 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_25, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 406 'partselect' 'tmp_108' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 407 [1/1] (0.00ns)   --->   "%trunc_ln65_25 = trunc i32 %bitcast_ln65_25" [matmul.cpp:65]   --->   Operation 407 'trunc' 'trunc_ln65_25' <Predicate = true> <Delay = 0.00>
ST_29 : Operation 408 [1/1] (0.85ns)   --->   "%icmp_ln65_50 = icmp_ne  i8 %tmp_108, i8 255" [matmul.cpp:65]   --->   Operation 408 'icmp' 'icmp_ln65_50' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 409 [1/1] (0.97ns)   --->   "%icmp_ln65_51 = icmp_eq  i23 %trunc_ln65_25, i23 0" [matmul.cpp:65]   --->   Operation 409 'icmp' 'icmp_ln65_51' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 410 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_25)   --->   "%or_ln65_25 = or i1 %icmp_ln65_51, i1 %icmp_ln65_50" [matmul.cpp:65]   --->   Operation 410 'or' 'or_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 411 [1/2] (3.34ns)   --->   "%tmp_109 = fcmp_olt  i32 %output_0_load_25, i32 0" [matmul.cpp:65]   --->   Operation 411 'fcmp' 'tmp_109' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 412 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_25)   --->   "%and_ln65_25 = and i1 %or_ln65_25, i1 %tmp_109" [matmul.cpp:65]   --->   Operation 412 'and' 'and_ln65_25' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 413 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_25 = select i1 %and_ln65_25, i32 0, i32 %output_0_load_25" [matmul.cpp:65]   --->   Operation 413 'select' 'select_ln65_25' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_29 : Operation 414 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_25, i5 %output_0_addr_25" [matmul.cpp:66]   --->   Operation 414 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_29 : Operation 415 [2/2] (3.34ns)   --->   "%tmp_111 = fcmp_olt  i32 %output_0_load_26, i32 0" [matmul.cpp:65]   --->   Operation 415 'fcmp' 'tmp_111' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_29 : Operation 416 [2/2] (3.34ns)   --->   "%tmp_113 = fcmp_olt  i32 %output_0_load_27, i32 0" [matmul.cpp:65]   --->   Operation 416 'fcmp' 'tmp_113' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 29> <Delay = 5.22>
ST_30 : Operation 417 [1/1] (0.00ns)   --->   "%bitcast_ln65_26 = bitcast i32 %output_0_load_26" [matmul.cpp:65]   --->   Operation 417 'bitcast' 'bitcast_ln65_26' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 418 [1/1] (0.00ns)   --->   "%tmp_110 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_26, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 418 'partselect' 'tmp_110' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 419 [1/1] (0.00ns)   --->   "%trunc_ln65_26 = trunc i32 %bitcast_ln65_26" [matmul.cpp:65]   --->   Operation 419 'trunc' 'trunc_ln65_26' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 420 [1/1] (0.85ns)   --->   "%icmp_ln65_52 = icmp_ne  i8 %tmp_110, i8 255" [matmul.cpp:65]   --->   Operation 420 'icmp' 'icmp_ln65_52' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 421 [1/1] (0.97ns)   --->   "%icmp_ln65_53 = icmp_eq  i23 %trunc_ln65_26, i23 0" [matmul.cpp:65]   --->   Operation 421 'icmp' 'icmp_ln65_53' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 422 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_26)   --->   "%or_ln65_26 = or i1 %icmp_ln65_53, i1 %icmp_ln65_52" [matmul.cpp:65]   --->   Operation 422 'or' 'or_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 423 [1/2] (3.34ns)   --->   "%tmp_111 = fcmp_olt  i32 %output_0_load_26, i32 0" [matmul.cpp:65]   --->   Operation 423 'fcmp' 'tmp_111' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 424 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_26)   --->   "%and_ln65_26 = and i1 %or_ln65_26, i1 %tmp_111" [matmul.cpp:65]   --->   Operation 424 'and' 'and_ln65_26' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 425 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_26 = select i1 %and_ln65_26, i32 0, i32 %output_0_load_26" [matmul.cpp:65]   --->   Operation 425 'select' 'select_ln65_26' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 426 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_26, i5 %output_0_addr_26" [matmul.cpp:66]   --->   Operation 426 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_30 : Operation 427 [1/1] (0.00ns)   --->   "%bitcast_ln65_27 = bitcast i32 %output_0_load_27" [matmul.cpp:65]   --->   Operation 427 'bitcast' 'bitcast_ln65_27' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 428 [1/1] (0.00ns)   --->   "%tmp_112 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_27, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 428 'partselect' 'tmp_112' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 429 [1/1] (0.00ns)   --->   "%trunc_ln65_27 = trunc i32 %bitcast_ln65_27" [matmul.cpp:65]   --->   Operation 429 'trunc' 'trunc_ln65_27' <Predicate = true> <Delay = 0.00>
ST_30 : Operation 430 [1/1] (0.85ns)   --->   "%icmp_ln65_54 = icmp_ne  i8 %tmp_112, i8 255" [matmul.cpp:65]   --->   Operation 430 'icmp' 'icmp_ln65_54' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 431 [1/1] (0.97ns)   --->   "%icmp_ln65_55 = icmp_eq  i23 %trunc_ln65_27, i23 0" [matmul.cpp:65]   --->   Operation 431 'icmp' 'icmp_ln65_55' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 432 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_27)   --->   "%or_ln65_27 = or i1 %icmp_ln65_55, i1 %icmp_ln65_54" [matmul.cpp:65]   --->   Operation 432 'or' 'or_ln65_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 433 [1/2] (3.34ns)   --->   "%tmp_113 = fcmp_olt  i32 %output_0_load_27, i32 0" [matmul.cpp:65]   --->   Operation 433 'fcmp' 'tmp_113' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 434 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_27)   --->   "%and_ln65_27 = and i1 %or_ln65_27, i1 %tmp_113" [matmul.cpp:65]   --->   Operation 434 'and' 'and_ln65_27' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 435 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_27 = select i1 %and_ln65_27, i32 0, i32 %output_0_load_27" [matmul.cpp:65]   --->   Operation 435 'select' 'select_ln65_27' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_30 : Operation 436 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_27, i5 %output_0_addr_27" [matmul.cpp:66]   --->   Operation 436 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_30 : Operation 437 [2/2] (3.34ns)   --->   "%tmp_115 = fcmp_olt  i32 %output_0_load_28, i32 0" [matmul.cpp:65]   --->   Operation 437 'fcmp' 'tmp_115' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_30 : Operation 438 [2/2] (3.34ns)   --->   "%tmp_117 = fcmp_olt  i32 %output_0_load_29, i32 0" [matmul.cpp:65]   --->   Operation 438 'fcmp' 'tmp_117' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 30> <Delay = 5.22>
ST_31 : Operation 439 [1/1] (0.00ns)   --->   "%bitcast_ln65_28 = bitcast i32 %output_0_load_28" [matmul.cpp:65]   --->   Operation 439 'bitcast' 'bitcast_ln65_28' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 440 [1/1] (0.00ns)   --->   "%tmp_114 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_28, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 440 'partselect' 'tmp_114' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 441 [1/1] (0.00ns)   --->   "%trunc_ln65_28 = trunc i32 %bitcast_ln65_28" [matmul.cpp:65]   --->   Operation 441 'trunc' 'trunc_ln65_28' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 442 [1/1] (0.85ns)   --->   "%icmp_ln65_56 = icmp_ne  i8 %tmp_114, i8 255" [matmul.cpp:65]   --->   Operation 442 'icmp' 'icmp_ln65_56' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 443 [1/1] (0.97ns)   --->   "%icmp_ln65_57 = icmp_eq  i23 %trunc_ln65_28, i23 0" [matmul.cpp:65]   --->   Operation 443 'icmp' 'icmp_ln65_57' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 444 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_28)   --->   "%or_ln65_28 = or i1 %icmp_ln65_57, i1 %icmp_ln65_56" [matmul.cpp:65]   --->   Operation 444 'or' 'or_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 445 [1/2] (3.34ns)   --->   "%tmp_115 = fcmp_olt  i32 %output_0_load_28, i32 0" [matmul.cpp:65]   --->   Operation 445 'fcmp' 'tmp_115' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 446 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_28)   --->   "%and_ln65_28 = and i1 %or_ln65_28, i1 %tmp_115" [matmul.cpp:65]   --->   Operation 446 'and' 'and_ln65_28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 447 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_28 = select i1 %and_ln65_28, i32 0, i32 %output_0_load_28" [matmul.cpp:65]   --->   Operation 447 'select' 'select_ln65_28' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 448 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_28, i5 %output_0_addr_28" [matmul.cpp:66]   --->   Operation 448 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_31 : Operation 449 [1/1] (0.00ns)   --->   "%bitcast_ln65_29 = bitcast i32 %output_0_load_29" [matmul.cpp:65]   --->   Operation 449 'bitcast' 'bitcast_ln65_29' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 450 [1/1] (0.00ns)   --->   "%tmp_116 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_29, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 450 'partselect' 'tmp_116' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 451 [1/1] (0.00ns)   --->   "%trunc_ln65_29 = trunc i32 %bitcast_ln65_29" [matmul.cpp:65]   --->   Operation 451 'trunc' 'trunc_ln65_29' <Predicate = true> <Delay = 0.00>
ST_31 : Operation 452 [1/1] (0.85ns)   --->   "%icmp_ln65_58 = icmp_ne  i8 %tmp_116, i8 255" [matmul.cpp:65]   --->   Operation 452 'icmp' 'icmp_ln65_58' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 453 [1/1] (0.97ns)   --->   "%icmp_ln65_59 = icmp_eq  i23 %trunc_ln65_29, i23 0" [matmul.cpp:65]   --->   Operation 453 'icmp' 'icmp_ln65_59' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 454 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_29)   --->   "%or_ln65_29 = or i1 %icmp_ln65_59, i1 %icmp_ln65_58" [matmul.cpp:65]   --->   Operation 454 'or' 'or_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 455 [1/2] (3.34ns)   --->   "%tmp_117 = fcmp_olt  i32 %output_0_load_29, i32 0" [matmul.cpp:65]   --->   Operation 455 'fcmp' 'tmp_117' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 456 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_29)   --->   "%and_ln65_29 = and i1 %or_ln65_29, i1 %tmp_117" [matmul.cpp:65]   --->   Operation 456 'and' 'and_ln65_29' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 457 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_29 = select i1 %and_ln65_29, i32 0, i32 %output_0_load_29" [matmul.cpp:65]   --->   Operation 457 'select' 'select_ln65_29' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_31 : Operation 458 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_29, i5 %output_0_addr_29" [matmul.cpp:66]   --->   Operation 458 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_31 : Operation 459 [2/2] (3.34ns)   --->   "%tmp_119 = fcmp_olt  i32 %output_0_load_30, i32 0" [matmul.cpp:65]   --->   Operation 459 'fcmp' 'tmp_119' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_31 : Operation 460 [2/2] (3.34ns)   --->   "%tmp_121 = fcmp_olt  i32 %output_0_load_31, i32 0" [matmul.cpp:65]   --->   Operation 460 'fcmp' 'tmp_121' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 31> <Delay = 5.22>
ST_32 : Operation 461 [1/1] (0.00ns)   --->   "%bitcast_ln65_30 = bitcast i32 %output_0_load_30" [matmul.cpp:65]   --->   Operation 461 'bitcast' 'bitcast_ln65_30' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 462 [1/1] (0.00ns)   --->   "%tmp_118 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_30, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 462 'partselect' 'tmp_118' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 463 [1/1] (0.00ns)   --->   "%trunc_ln65_30 = trunc i32 %bitcast_ln65_30" [matmul.cpp:65]   --->   Operation 463 'trunc' 'trunc_ln65_30' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 464 [1/1] (0.85ns)   --->   "%icmp_ln65_60 = icmp_ne  i8 %tmp_118, i8 255" [matmul.cpp:65]   --->   Operation 464 'icmp' 'icmp_ln65_60' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 465 [1/1] (0.97ns)   --->   "%icmp_ln65_61 = icmp_eq  i23 %trunc_ln65_30, i23 0" [matmul.cpp:65]   --->   Operation 465 'icmp' 'icmp_ln65_61' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 466 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_30)   --->   "%or_ln65_30 = or i1 %icmp_ln65_61, i1 %icmp_ln65_60" [matmul.cpp:65]   --->   Operation 466 'or' 'or_ln65_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 467 [1/2] (3.34ns)   --->   "%tmp_119 = fcmp_olt  i32 %output_0_load_30, i32 0" [matmul.cpp:65]   --->   Operation 467 'fcmp' 'tmp_119' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 468 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_30)   --->   "%and_ln65_30 = and i1 %or_ln65_30, i1 %tmp_119" [matmul.cpp:65]   --->   Operation 468 'and' 'and_ln65_30' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 469 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_30 = select i1 %and_ln65_30, i32 0, i32 %output_0_load_30" [matmul.cpp:65]   --->   Operation 469 'select' 'select_ln65_30' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_32 : Operation 470 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_30, i5 %output_0_addr_30" [matmul.cpp:66]   --->   Operation 470 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_32 : Operation 471 [1/1] (0.00ns)   --->   "%bitcast_ln65_31 = bitcast i32 %output_0_load_31" [matmul.cpp:65]   --->   Operation 471 'bitcast' 'bitcast_ln65_31' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 472 [1/1] (0.00ns)   --->   "%tmp_120 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %bitcast_ln65_31, i32 23, i32 30" [matmul.cpp:65]   --->   Operation 472 'partselect' 'tmp_120' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 473 [1/1] (0.00ns)   --->   "%trunc_ln65_31 = trunc i32 %bitcast_ln65_31" [matmul.cpp:65]   --->   Operation 473 'trunc' 'trunc_ln65_31' <Predicate = true> <Delay = 0.00>
ST_32 : Operation 474 [1/1] (0.85ns)   --->   "%icmp_ln65_62 = icmp_ne  i8 %tmp_120, i8 255" [matmul.cpp:65]   --->   Operation 474 'icmp' 'icmp_ln65_62' <Predicate = true> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 475 [1/1] (0.97ns)   --->   "%icmp_ln65_63 = icmp_eq  i23 %trunc_ln65_31, i23 0" [matmul.cpp:65]   --->   Operation 475 'icmp' 'icmp_ln65_63' <Predicate = true> <Delay = 0.97> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 476 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_31)   --->   "%or_ln65_31 = or i1 %icmp_ln65_63, i1 %icmp_ln65_62" [matmul.cpp:65]   --->   Operation 476 'or' 'or_ln65_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 477 [1/2] (3.34ns)   --->   "%tmp_121 = fcmp_olt  i32 %output_0_load_31, i32 0" [matmul.cpp:65]   --->   Operation 477 'fcmp' 'tmp_121' <Predicate = true> <Delay = 3.34> <CoreInst = "FCompare">   --->   Core 19 'FCompare' <Latency = 1> <II = 1> <Delay = 3.34> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 478 [1/1] (0.00ns) (grouped into LUT with out node select_ln65_31)   --->   "%and_ln65_31 = and i1 %or_ln65_31, i1 %tmp_121" [matmul.cpp:65]   --->   Operation 478 'and' 'and_ln65_31' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_32 : Operation 479 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln65_31 = select i1 %and_ln65_31, i32 0, i32 %output_0_load_31" [matmul.cpp:65]   --->   Operation 479 'select' 'select_ln65_31' <Predicate = true> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_32 : Operation 480 [1/1] (1.35ns)   --->   "%store_ln66 = store i32 %select_ln65_31, i5 %output_0_addr_31" [matmul.cpp:66]   --->   Operation 480 'store' 'store_ln66' <Predicate = true> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_32 : Operation 481 [1/1] (0.00ns)   --->   "%ret_ln71 = ret" [matmul.cpp:71]   --->   Operation 481 'ret' 'ret_ln71' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	'getelementptr' operation ('output_0_addr', matmul.cpp:65) [2]  (0 ns)
	'load' operation ('output_0_load', matmul.cpp:65) on array 'output_0' [3]  (1.35 ns)

 <State 2>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load', matmul.cpp:65) on array 'output_0' [3]  (1.35 ns)

 <State 3>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_2', matmul.cpp:65) on array 'output_0' [27]  (1.35 ns)

 <State 4>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_4', matmul.cpp:65) on array 'output_0' [51]  (1.35 ns)

 <State 5>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_6', matmul.cpp:65) on array 'output_0' [75]  (1.35 ns)

 <State 6>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_8', matmul.cpp:65) on array 'output_0' [99]  (1.35 ns)

 <State 7>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_10', matmul.cpp:65) on array 'output_0' [123]  (1.35 ns)

 <State 8>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_12', matmul.cpp:65) on array 'output_0' [147]  (1.35 ns)

 <State 9>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_14', matmul.cpp:65) on array 'output_0' [171]  (1.35 ns)

 <State 10>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_16', matmul.cpp:65) on array 'output_0' [195]  (1.35 ns)

 <State 11>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_18', matmul.cpp:65) on array 'output_0' [219]  (1.35 ns)

 <State 12>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_20', matmul.cpp:65) on array 'output_0' [243]  (1.35 ns)

 <State 13>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_22', matmul.cpp:65) on array 'output_0' [267]  (1.35 ns)

 <State 14>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_24', matmul.cpp:65) on array 'output_0' [291]  (1.35 ns)

 <State 15>: 1.35ns
The critical path consists of the following:
	'load' operation ('output_0_load_26', matmul.cpp:65) on array 'output_0' [315]  (1.35 ns)

 <State 16>: 3.35ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', matmul.cpp:65) [10]  (3.35 ns)

 <State 17>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_s', matmul.cpp:65) [10]  (3.35 ns)
	'and' operation ('and_ln65', matmul.cpp:65) [11]  (0 ns)
	'select' operation ('select_ln65', matmul.cpp:65) [12]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65', matmul.cpp:65 on array 'output_0' [13]  (1.35 ns)

 <State 18>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_63', matmul.cpp:65) [34]  (3.35 ns)
	'and' operation ('and_ln65_2', matmul.cpp:65) [35]  (0 ns)
	'select' operation ('select_ln65_2', matmul.cpp:65) [36]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_2', matmul.cpp:65 on array 'output_0' [37]  (1.35 ns)

 <State 19>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_67', matmul.cpp:65) [58]  (3.35 ns)
	'and' operation ('and_ln65_4', matmul.cpp:65) [59]  (0 ns)
	'select' operation ('select_ln65_4', matmul.cpp:65) [60]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_4', matmul.cpp:65 on array 'output_0' [61]  (1.35 ns)

 <State 20>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_71', matmul.cpp:65) [82]  (3.35 ns)
	'and' operation ('and_ln65_6', matmul.cpp:65) [83]  (0 ns)
	'select' operation ('select_ln65_6', matmul.cpp:65) [84]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_6', matmul.cpp:65 on array 'output_0' [85]  (1.35 ns)

 <State 21>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_75', matmul.cpp:65) [106]  (3.35 ns)
	'and' operation ('and_ln65_8', matmul.cpp:65) [107]  (0 ns)
	'select' operation ('select_ln65_8', matmul.cpp:65) [108]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_8', matmul.cpp:65 on array 'output_0' [109]  (1.35 ns)

 <State 22>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_79', matmul.cpp:65) [130]  (3.35 ns)
	'and' operation ('and_ln65_10', matmul.cpp:65) [131]  (0 ns)
	'select' operation ('select_ln65_10', matmul.cpp:65) [132]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_10', matmul.cpp:65 on array 'output_0' [133]  (1.35 ns)

 <State 23>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_83', matmul.cpp:65) [154]  (3.35 ns)
	'and' operation ('and_ln65_12', matmul.cpp:65) [155]  (0 ns)
	'select' operation ('select_ln65_12', matmul.cpp:65) [156]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_12', matmul.cpp:65 on array 'output_0' [157]  (1.35 ns)

 <State 24>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_87', matmul.cpp:65) [178]  (3.35 ns)
	'and' operation ('and_ln65_14', matmul.cpp:65) [179]  (0 ns)
	'select' operation ('select_ln65_14', matmul.cpp:65) [180]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_14', matmul.cpp:65 on array 'output_0' [181]  (1.35 ns)

 <State 25>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_91', matmul.cpp:65) [202]  (3.35 ns)
	'and' operation ('and_ln65_16', matmul.cpp:65) [203]  (0 ns)
	'select' operation ('select_ln65_16', matmul.cpp:65) [204]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_16', matmul.cpp:65 on array 'output_0' [205]  (1.35 ns)

 <State 26>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_95', matmul.cpp:65) [226]  (3.35 ns)
	'and' operation ('and_ln65_18', matmul.cpp:65) [227]  (0 ns)
	'select' operation ('select_ln65_18', matmul.cpp:65) [228]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_18', matmul.cpp:65 on array 'output_0' [229]  (1.35 ns)

 <State 27>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_99', matmul.cpp:65) [250]  (3.35 ns)
	'and' operation ('and_ln65_20', matmul.cpp:65) [251]  (0 ns)
	'select' operation ('select_ln65_20', matmul.cpp:65) [252]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_20', matmul.cpp:65 on array 'output_0' [253]  (1.35 ns)

 <State 28>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_103', matmul.cpp:65) [274]  (3.35 ns)
	'and' operation ('and_ln65_22', matmul.cpp:65) [275]  (0 ns)
	'select' operation ('select_ln65_22', matmul.cpp:65) [276]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_22', matmul.cpp:65 on array 'output_0' [277]  (1.35 ns)

 <State 29>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_107', matmul.cpp:65) [298]  (3.35 ns)
	'and' operation ('and_ln65_24', matmul.cpp:65) [299]  (0 ns)
	'select' operation ('select_ln65_24', matmul.cpp:65) [300]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_24', matmul.cpp:65 on array 'output_0' [301]  (1.35 ns)

 <State 30>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_111', matmul.cpp:65) [322]  (3.35 ns)
	'and' operation ('and_ln65_26', matmul.cpp:65) [323]  (0 ns)
	'select' operation ('select_ln65_26', matmul.cpp:65) [324]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_26', matmul.cpp:65 on array 'output_0' [325]  (1.35 ns)

 <State 31>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_115', matmul.cpp:65) [346]  (3.35 ns)
	'and' operation ('and_ln65_28', matmul.cpp:65) [347]  (0 ns)
	'select' operation ('select_ln65_28', matmul.cpp:65) [348]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_28', matmul.cpp:65 on array 'output_0' [349]  (1.35 ns)

 <State 32>: 5.22ns
The critical path consists of the following:
	'fcmp' operation ('tmp_119', matmul.cpp:65) [370]  (3.35 ns)
	'and' operation ('and_ln65_30', matmul.cpp:65) [371]  (0 ns)
	'select' operation ('select_ln65_30', matmul.cpp:65) [372]  (0.525 ns)
	'store' operation ('store_ln66', matmul.cpp:66) of variable 'select_ln65_30', matmul.cpp:65 on array 'output_0' [373]  (1.35 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
